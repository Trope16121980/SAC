package jframe.inicioWinPrincipal;

import jframe.menuPrincipal.Backup;
import jframe.menuPrincipal.date;
import jframe.filaOld.Llaves_2020_2021;
import jframe.filaOld.Almacen_2020_2021;
import jframe.filaOld.Ropa_2020_2021;
import jframe.filaOld.ListaEntrada2021;
import jframe.filaOld.ListaEntrada2020_2021;
import jframe.filaOld.Recepcion2020_2021;
import jframe.filaOld.ListaEntrada2019_2020;
import jframe.filaOld.Alarmas_2021;
import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Vector;
import javax.swing.ImageIcon;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import jframe.Alarmas;
import jframe.Almacen;
import jframe.BaseDatosSinTarjeta;
import jframe.BaseDatosTarjeta;
import jframe.Emergencias;
import jframe.EntregaRopa;
import jframe.EnvioPaquetes;
import jframe.filaOld.Envios_2020_2021;
import jframe.ListaEntradaSalida;
import jframe.ListaLlaves;
import jframe.ListaMaterial;
import jframe.ListadoTelefonico;
import jframe.Llaves;
import jframe.LlavesCafe;
import jframe.menuPrincipal.MiRenderer;
import jframe.RecepcionPaquetes;
import jframe.StockRopa;
import jframe.Visitas;

/**
 *
 * @author Gustavo_Senorans
 */
public final class InicioWin extends javax.swing.JFrame {

    Backup Backup = new Backup();
    date date = new date();
    String user = System.getProperty("user.name");
    File fichero = new File("C:\\Users\\" + user + "\\Documents\\NetBeansProjects\\JFrame\\src\\file\\entrada.csv");
    File bd = new File("C:\\Users\\" + user + "\\Documents\\NetBeansProjects\\JFrame\\src\\file\\bd.csv");
    File fichero_temporal = new File("C:\\Users\\" + user + "\\Documents\\NetBeansProjects\\JFrame\\src\\file\\temporal.csv");
    File ficheroUser = new File("C:\\Users\\" + user + "\\Documents\\NetBeansProjects\\JFrame\\src\\file\\user.csv");
    File fileEntradaUser = new File("C:\\Users\\" + user + "\\Documents\\NetBeansProjects\\JFrame\\src\\file\\userEntrada.csv");

    /**
     * Creates new form InicioWin
     */
    public InicioWin() {
        MiRenderer m = new MiRenderer();
        initComponents();
        ficheroApp();
        this.setTitle("Inicio Control Usuarios");
        this.setLocationRelativeTo(InicioWin.this);
        setIconImage(new ImageIcon(getClass().getResource("/img/IconoJFrame.png")).getImage());
        this.getContentPane().setBackground(new Color(243, 233, 147));
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setResizable(true);
        MostrarTabla();
        NumPersonas();
        Backup.ficheroApp();
        TablaEntradaSalida.getTableHeader().setFont(new Font("Courier New", 1, 18));
        TablaEntradaSalida.getTableHeader().setBackground(Color.blue);
        TablaEntradaSalida.getTableHeader().setForeground(Color.white);
        TablaEntradaSalida.getTableHeader().setPreferredSize(new java.awt.Dimension(50, 50));
        TablaEntradaSalida.setRowHeight(30);
        TablaEntradaSalida.setRowMargin(10);

        for (int i = 0; i < TablaEntradaSalida.getColumnCount(); i++) {
            TablaEntradaSalida.getColumnModel().getColumn(i).setCellRenderer(m);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        NumPersonas = new javax.swing.JTextField();
        btn2Visitas = new javax.swing.JButton();
        btn2Registros = new javax.swing.JButton();
        btn2Guardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaEntradaSalida = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        NotasEntradaSalida = new javax.swing.JTextField();
        txtApellidoEntrada = new javax.swing.JTextField();
        txtNombreEntrada = new javax.swing.JTextField();
        CodigoTarjetaEntrada = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CodigoTarjetaSalida = new javax.swing.JTextField();
        txtNombreSalida = new javax.swing.JTextField();
        txtApellidoSalida = new javax.swing.JTextField();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        btnActualizarMenu = new javax.swing.JMenuItem();
        btnListadoTelefonico = new javax.swing.JMenuItem();
        btnEmergenciasMenu = new javax.swing.JMenuItem();
        btnSalirMenu = new javax.swing.JMenuItem();
        menuBaaseDatos = new javax.swing.JMenu();
        btnConTarjeta = new javax.swing.JMenuItem();
        btnSinTarjeta = new javax.swing.JMenuItem();
        jMenu16 = new javax.swing.JMenu();
        btnRecepcionPaquetes = new javax.swing.JMenuItem();
        btnEnvioPaquetes = new javax.swing.JMenuItem();
        btnListaMaterial = new javax.swing.JMenuItem();
        jMenu15 = new javax.swing.JMenu();
        btnEntradaSalidaLlaves = new javax.swing.JMenuItem();
        btnListaLlaves = new javax.swing.JMenuItem();
        jMenu18 = new javax.swing.JMenu();
        btnStockRopa = new javax.swing.JMenuItem();
        btnEntregaRopa = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        btnEntrada2019_2020 = new javax.swing.JMenuItem();
        btnEntrada2020_2021 = new javax.swing.JMenuItem();
        btnEntradaSalida2021 = new javax.swing.JMenuItem();
        btnLlavesExplosimetroWalkie2021 = new javax.swing.JMenuItem();
        btnAlmacen2021 = new javax.swing.JMenuItem();
        btnAlalrmas2021 = new javax.swing.JMenuItem();
        btnEnvioPaquetes2021 = new javax.swing.JMenuItem();
        btnRecepcionPaquetes2021 = new javax.swing.JMenuItem();
        btnSalidaRopa2021 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        btnAlmacen = new javax.swing.JMenuItem();
        btnAlarma = new javax.swing.JMenuItem();
        btnLlavesCafe = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem3.setText("jMenuItem3");

        jMenuItem6.setText("jMenuItem6");

        jMenuItem5.setText("jMenuItem5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(243, 233, 147));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Courier New", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Entradas y Salidas");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel9.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 255));
        jLabel9.setText("Personas dentro de Planta:");
        jLabel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        NumPersonas.setEditable(false);
        NumPersonas.setBackground(new java.awt.Color(255, 255, 255));
        NumPersonas.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        NumPersonas.setForeground(new java.awt.Color(204, 0, 0));
        NumPersonas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NumPersonas.setToolTipText("<html>NÃºmero de personas<br/>que hay dentro de planta.</html>");
        NumPersonas.setBorder(null);

        btn2Visitas.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btn2Visitas.setForeground(new java.awt.Color(0, 0, 255));
        btn2Visitas.setMnemonic('v');
        btn2Visitas.setText("Visitas");
        btn2Visitas.setToolTipText("<html>Ventana para realizar<br/>la entrada de las visitas<br/>y personal sin tarjeta propia.<br/>Tambien puede usar Alt + v</html>");
        btn2Visitas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn2Visitas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn2Visitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2VisitasActionPerformed(evt);
            }
        });

        btn2Registros.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btn2Registros.setForeground(new java.awt.Color(0, 0, 255));
        btn2Registros.setMnemonic('e');
        btn2Registros.setText("Registros");
        btn2Registros.setToolTipText("<html>Ventana para ver<br/>todos los registros<br/>de entradas y salidas en planta.<br/>Tambien puede usar Alt + e</html>");
        btn2Registros.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn2Registros.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn2Registros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2RegistrosActionPerformed(evt);
            }
        });

        btn2Guardar.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btn2Guardar.setForeground(new java.awt.Color(0, 0, 255));
        btn2Guardar.setMnemonic('g');
        btn2Guardar.setText("Guardar");
        btn2Guardar.setToolTipText("<html>Guardar entrada.<br/>Tambien puede usar Alt + g</html>");
        btn2Guardar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn2Guardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn2Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2GuardarActionPerformed(evt);
            }
        });

        TablaEntradaSalida.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TablaEntradaSalida.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        TablaEntradaSalida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SituaciÃ³n", "Fecha", "Empresa", "Nombre", "Apellido", "Entrada", "Salida"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaEntradaSalida.setSelectionBackground(new java.awt.Color(153, 204, 255));
        TablaEntradaSalida.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TablaEntradaSalida);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo.png"))); // NOI18N
        jLabel10.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel2.setBackground(new java.awt.Color(204, 153, 0));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("CÃ³digo Tarjeta Entrada:");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel3.setText("Nombre Entrada:");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel4.setText("Apellido Entrada:");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel8.setText("Notas:");

        NotasEntradaSalida.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        NotasEntradaSalida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NotasEntradaSalida.setBorder(null);
        NotasEntradaSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NotasEntradaSalidaActionPerformed(evt);
            }
        });

        txtApellidoEntrada.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtApellidoEntrada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtApellidoEntrada.setBorder(null);

        txtNombreEntrada.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtNombreEntrada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNombreEntrada.setBorder(null);

        CodigoTarjetaEntrada.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        CodigoTarjetaEntrada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CodigoTarjetaEntrada.setBorder(null);

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel7.setText("CÃ³digo Tarjeta Salida:");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel5.setText("Nombre Salida:");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel6.setText("Apellido Salida:");

        CodigoTarjetaSalida.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        CodigoTarjetaSalida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CodigoTarjetaSalida.setBorder(null);
        CodigoTarjetaSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodigoTarjetaSalidaActionPerformed(evt);
            }
        });

        txtNombreSalida.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtNombreSalida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNombreSalida.setBorder(null);

        txtApellidoSalida.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtApellidoSalida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtApellidoSalida.setBorder(null);
        txtApellidoSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoSalidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CodigoTarjetaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellidoEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NotasEntradaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CodigoTarjetaSalida)
                    .addComponent(txtApellidoSalida)
                    .addComponent(txtNombreSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CodigoTarjetaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtNombreSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtApellidoSalida)
                            .addComponent(jLabel6))
                        .addGap(27, 27, 27))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(CodigoTarjetaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNombreEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtApellidoEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(NotasEntradaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(11, 11, 11))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(NumPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(114, 114, 114))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn2Visitas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn2Registros)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn2Guardar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(NumPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn2Guardar)
                    .addComponent(btn2Registros)
                    .addComponent(btn2Visitas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        jMenuBar2.setBorder(null);
        jMenuBar2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N

        jMenu2.setBorder(null);
        jMenu2.setForeground(new java.awt.Color(0, 0, 255));
        jMenu2.setMnemonic('m');
        jMenu2.setText("MenÃº");
        jMenu2.setToolTipText("<html>MenÃº principal<br/>Tambien se puede usar Alt + m</html>");
        jMenu2.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jMenu2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenu2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnActualizarMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnActualizarMenu.setForeground(new java.awt.Color(0, 0, 255));
        btnActualizarMenu.setText("Actualizar");
        btnActualizarMenu.setBorder(null);
        btnActualizarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarMenuActionPerformed(evt);
            }
        });
        jMenu2.add(btnActualizarMenu);

        btnListadoTelefonico.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnListadoTelefonico.setForeground(new java.awt.Color(0, 0, 255));
        btnListadoTelefonico.setText("Listado TelefÃ³nico");
        btnListadoTelefonico.setBorder(null);
        btnListadoTelefonico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListadoTelefonicoActionPerformed(evt);
            }
        });
        jMenu2.add(btnListadoTelefonico);

        btnEmergenciasMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnEmergenciasMenu.setForeground(new java.awt.Color(255, 0, 0));
        btnEmergenciasMenu.setMnemonic('e');
        btnEmergenciasMenu.setText("Emergencias");
        btnEmergenciasMenu.setBorder(null);
        btnEmergenciasMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmergenciasMenuActionPerformed(evt);
            }
        });
        jMenu2.add(btnEmergenciasMenu);

        btnSalirMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnSalirMenu.setForeground(new java.awt.Color(255, 0, 0));
        btnSalirMenu.setMnemonic('s');
        btnSalirMenu.setText("Salir");
        btnSalirMenu.setToolTipText("<html>Pulsar para salir<br/>Tambien se puede usar Alt + s<br/>y a continuaciÃ³n entrer</html>");
        btnSalirMenu.setBorder(null);
        btnSalirMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirMenuActionPerformed(evt);
            }
        });
        jMenu2.add(btnSalirMenu);

        jMenuBar2.add(jMenu2);

        menuBaaseDatos.setBorder(null);
        menuBaaseDatos.setForeground(new java.awt.Color(0, 0, 255));
        menuBaaseDatos.setMnemonic('i');
        menuBaaseDatos.setText("InformaciÃ³n");
        menuBaaseDatos.setToolTipText("<html>MenÃº para bases de datos<br/>Tambien se puede usar Alt + i</html>");
        menuBaaseDatos.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        menuBaaseDatos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuBaaseDatos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnConTarjeta.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnConTarjeta.setForeground(new java.awt.Color(0, 0, 255));
        btnConTarjeta.setText("Con Tarjeta");
        btnConTarjeta.setBorder(null);
        btnConTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConTarjetaActionPerformed(evt);
            }
        });
        menuBaaseDatos.add(btnConTarjeta);

        btnSinTarjeta.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnSinTarjeta.setForeground(new java.awt.Color(0, 0, 255));
        btnSinTarjeta.setText("Sin Tarjeta");
        btnSinTarjeta.setBorder(null);
        btnSinTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSinTarjetaActionPerformed(evt);
            }
        });
        menuBaaseDatos.add(btnSinTarjeta);

        jMenuBar2.add(menuBaaseDatos);

        jMenu16.setBorder(null);
        jMenu16.setForeground(new java.awt.Color(0, 0, 255));
        jMenu16.setMnemonic('p');
        jMenu16.setText("PaqueterÃ­a");
        jMenu16.setToolTipText("<html>MenÃº paqueteria<br/>Tambien se puede usar Alt + p</html>");
        jMenu16.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jMenu16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenu16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnRecepcionPaquetes.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnRecepcionPaquetes.setForeground(new java.awt.Color(0, 0, 255));
        btnRecepcionPaquetes.setText("RecepciÃ³n Paquetes");
        btnRecepcionPaquetes.setBorder(null);
        btnRecepcionPaquetes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecepcionPaquetesActionPerformed(evt);
            }
        });
        jMenu16.add(btnRecepcionPaquetes);

        btnEnvioPaquetes.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnEnvioPaquetes.setForeground(new java.awt.Color(0, 0, 255));
        btnEnvioPaquetes.setText("Envio Paquetes");
        btnEnvioPaquetes.setBorder(null);
        btnEnvioPaquetes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnvioPaquetesActionPerformed(evt);
            }
        });
        jMenu16.add(btnEnvioPaquetes);

        btnListaMaterial.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnListaMaterial.setForeground(new java.awt.Color(0, 0, 255));
        btnListaMaterial.setText("Lista de material");
        btnListaMaterial.setBorder(null);
        btnListaMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListaMaterialActionPerformed(evt);
            }
        });
        jMenu16.add(btnListaMaterial);

        jMenuBar2.add(jMenu16);

        jMenu15.setBorder(null);
        jMenu15.setForeground(new java.awt.Color(0, 0, 255));
        jMenu15.setMnemonic('m');
        jMenu15.setText("Material");
        jMenu15.setToolTipText("<html>MenÃº llaves y material<br/>Tambien se puede usar Alt + m</html>");
        jMenu15.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jMenu15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenu15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnEntradaSalidaLlaves.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnEntradaSalidaLlaves.setForeground(new java.awt.Color(0, 0, 255));
        btnEntradaSalidaLlaves.setText("Entradas - Salidas");
        btnEntradaSalidaLlaves.setBorder(null);
        btnEntradaSalidaLlaves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntradaSalidaLlavesActionPerformed(evt);
            }
        });
        jMenu15.add(btnEntradaSalidaLlaves);

        btnListaLlaves.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnListaLlaves.setForeground(new java.awt.Color(0, 0, 255));
        btnListaLlaves.setText("Lista Llaves");
        btnListaLlaves.setBorder(null);
        btnListaLlaves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListaLlavesActionPerformed(evt);
            }
        });
        jMenu15.add(btnListaLlaves);

        jMenuBar2.add(jMenu15);

        jMenu18.setBorder(null);
        jMenu18.setForeground(new java.awt.Color(0, 0, 255));
        jMenu18.setMnemonic('r');
        jMenu18.setText("Ropa");
        jMenu18.setToolTipText("<html>MenÃº para epis<br/>Tambien se puede usar Alt + r</html>");
        jMenu18.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jMenu18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenu18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnStockRopa.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnStockRopa.setForeground(new java.awt.Color(0, 0, 255));
        btnStockRopa.setText("Stock");
        btnStockRopa.setBorder(null);
        btnStockRopa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStockRopaActionPerformed(evt);
            }
        });
        jMenu18.add(btnStockRopa);

        btnEntregaRopa.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnEntregaRopa.setForeground(new java.awt.Color(0, 0, 255));
        btnEntregaRopa.setText("Entrega Ropa");
        btnEntregaRopa.setBorder(null);
        btnEntregaRopa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntregaRopaActionPerformed(evt);
            }
        });
        jMenu18.add(btnEntregaRopa);

        jMenuBar2.add(jMenu18);

        jMenu4.setBorder(null);
        jMenu4.setForeground(new java.awt.Color(0, 0, 255));
        jMenu4.setMnemonic('2');
        jMenu4.setText("2020-2021");
        jMenu4.setToolTipText("<html>MenÃº para horarios antiguos<br/>Tambien se puede usar Alt + 2</html>");
        jMenu4.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jMenu4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenu4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnEntrada2019_2020.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnEntrada2019_2020.setForeground(new java.awt.Color(0, 0, 255));
        btnEntrada2019_2020.setText("Entradas 19-09-2020/26-12-2020");
        btnEntrada2019_2020.setBorder(null);
        btnEntrada2019_2020.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrada2019_2020ActionPerformed(evt);
            }
        });
        jMenu4.add(btnEntrada2019_2020);

        btnEntrada2020_2021.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnEntrada2020_2021.setForeground(new java.awt.Color(0, 0, 255));
        btnEntrada2020_2021.setText("Entradas 26-12-2020/03-03/2021");
        btnEntrada2020_2021.setBorder(null);
        btnEntrada2020_2021.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrada2020_2021ActionPerformed(evt);
            }
        });
        jMenu4.add(btnEntrada2020_2021);

        btnEntradaSalida2021.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnEntradaSalida2021.setForeground(new java.awt.Color(0, 0, 255));
        btnEntradaSalida2021.setText("Entradas 26-12-2020/31-12-2021");
        btnEntradaSalida2021.setBorder(null);
        btnEntradaSalida2021.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntradaSalida2021ActionPerformed(evt);
            }
        });
        jMenu4.add(btnEntradaSalida2021);

        btnLlavesExplosimetroWalkie2021.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnLlavesExplosimetroWalkie2021.setForeground(new java.awt.Color(0, 0, 255));
        btnLlavesExplosimetroWalkie2021.setText("Material 19-09-2020/30-12-2021");
        btnLlavesExplosimetroWalkie2021.setBorder(null);
        btnLlavesExplosimetroWalkie2021.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLlavesExplosimetroWalkie2021ActionPerformed(evt);
            }
        });
        jMenu4.add(btnLlavesExplosimetroWalkie2021);

        btnAlmacen2021.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnAlmacen2021.setForeground(new java.awt.Color(0, 0, 255));
        btnAlmacen2021.setText("Almacen 16-11-2020/23-02-2021");
        btnAlmacen2021.setBorder(null);
        btnAlmacen2021.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlmacen2021ActionPerformed(evt);
            }
        });
        jMenu4.add(btnAlmacen2021);

        btnAlalrmas2021.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnAlalrmas2021.setForeground(new java.awt.Color(0, 0, 255));
        btnAlalrmas2021.setText("Alarmas 05-10-2021/14-01-2022");
        btnAlalrmas2021.setBorder(null);
        btnAlalrmas2021.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlalrmas2021ActionPerformed(evt);
            }
        });
        jMenu4.add(btnAlalrmas2021);

        btnEnvioPaquetes2021.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnEnvioPaquetes2021.setForeground(new java.awt.Color(0, 0, 255));
        btnEnvioPaquetes2021.setText("Envios 22-09-2020/31-12-2021");
        btnEnvioPaquetes2021.setBorder(null);
        btnEnvioPaquetes2021.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnvioPaquetes2021ActionPerformed(evt);
            }
        });
        jMenu4.add(btnEnvioPaquetes2021);

        btnRecepcionPaquetes2021.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnRecepcionPaquetes2021.setForeground(new java.awt.Color(0, 0, 255));
        btnRecepcionPaquetes2021.setText("RecepciÃ³n 21-09-2020/31-12-2021");
        btnRecepcionPaquetes2021.setBorder(null);
        btnRecepcionPaquetes2021.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecepcionPaquetes2021ActionPerformed(evt);
            }
        });
        jMenu4.add(btnRecepcionPaquetes2021);

        btnSalidaRopa2021.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnSalidaRopa2021.setForeground(new java.awt.Color(0, 0, 255));
        btnSalidaRopa2021.setText("Ropa 20-09-2020/29-12-2021");
        btnSalidaRopa2021.setBorder(null);
        btnSalidaRopa2021.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalidaRopa2021ActionPerformed(evt);
            }
        });
        jMenu4.add(btnSalidaRopa2021);

        jMenuBar2.add(jMenu4);

        jMenu1.setBorder(null);
        jMenu1.setForeground(new java.awt.Color(0, 0, 255));
        jMenu1.setMnemonic('o');
        jMenu1.setText("Otros");
        jMenu1.setToolTipText("<html>MenÃº<br/>AlmacÃ©n, Alarmas, Llaves CafÃ©<br/>Tambien se puede usar Alt + o</html>");
        jMenu1.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jMenu1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenu1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnAlmacen.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnAlmacen.setForeground(new java.awt.Color(0, 0, 255));
        btnAlmacen.setText("AlmacÃ©n");
        btnAlmacen.setBorder(null);
        btnAlmacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlmacenActionPerformed(evt);
            }
        });
        jMenu1.add(btnAlmacen);

        btnAlarma.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnAlarma.setForeground(new java.awt.Color(0, 0, 255));
        btnAlarma.setText("Alarmas");
        btnAlarma.setBorder(null);
        btnAlarma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlarmaActionPerformed(evt);
            }
        });
        jMenu1.add(btnAlarma);

        btnLlavesCafe.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnLlavesCafe.setForeground(new java.awt.Color(0, 0, 255));
        btnLlavesCafe.setText("Llaves cafÃ©");
        btnLlavesCafe.setBorder(null);
        btnLlavesCafe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLlavesCafeActionPerformed(evt);
            }
        });
        jMenu1.add(btnLlavesCafe);

        jMenuBar2.add(jMenu1);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void ficheroApp() {
        if (!fichero.exists()) {
            JOptionPane.showMessageDialog(null, "\nHay un error en los fichero\nhable con el administrador.");
            return;
        }
    }

    public void NumPersonas() {
        String line;
        int i = 0;
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(fichero));
            while ((line = br.readLine()) != null) {
                String[] numPersonas = line.split(";");
                if (numPersonas[2].equals("DENTRO")) {
                    i++;
                    String numPersonasString = String.valueOf(i);
                    NumPersonas.setText(numPersonasString);
                } else {
                    String SinPersonasString = String.valueOf(i);
                    NumPersonas.setText(SinPersonasString);
                }
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void MostrarTabla() {
        String line;
        int i = 0;
        BufferedReader br = null;
        DefaultTableModel model = (DefaultTableModel) TablaEntradaSalida.getModel();
        TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(model);
        model.setRowCount(0);
        model.setRowCount(0);
        try {
            br = new BufferedReader(new FileReader(fichero));
            while ((line = br.readLine()) != null) {
                String[] tabla = line.split(";");
                if (tabla[2].equalsIgnoreCase("DENTRO")
                        || tabla[1].equals(date.fecha()) && tabla[2].equalsIgnoreCase("FUERA")) {
                    TablaEntradaSalida.setRowSorter(elQueOrdena);
                    Vector row = new Vector();
                    row.add(tabla[2]);
                    row.add(tabla[1]);
                    row.add(tabla[3]);
                    row.add(tabla[4]);
                    row.add(tabla[5]);
                    row.add(tabla[10]);
                    row.add(tabla[11]);
                    model.addRow(row);
                }
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void EntradaPorCodigo() {
        String line2;
        int i = 0;
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(fichero));
            while ((line2 = br.readLine()) != null) {
                String[] cod_tar = line2.split(";");
                if (CodigoTarjetaEntrada.getText().equals(cod_tar[7]) && cod_tar[2].equalsIgnoreCase("DENTRO")) {
                    JOptionPane.showMessageDialog(null, "\nEsta persona ya estÃ¡ dentro de la empresa.");
                    br.close();
                    return;
                } else {
                    i++;
                }
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
        String line;
        int d = 0;
        try {
            BufferedReader brd = null;
            BufferedReader brbd = null;
            BufferedWriter bw = null;
            brbd = new BufferedReader(new FileReader(bd));
            brd = new BufferedReader(new FileReader(fichero));
            bw = new BufferedWriter(new FileWriter(fichero, true));
            if (CodigoTarjetaEntrada.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "\nNo se puede dejar esta casilla vacia.");
                brd.close();
                brbd.close();
                return;
            }

            while ((line = brbd.readLine()) != null) {
                String[] cod_tar = line.split(";");
                if (cod_tar[4].equals(CodigoTarjetaEntrada.getText())) {
                    d++;
                    String notas = NotasEntradaSalida.getText();
                    if (NotasEntradaSalida.getText().equals("")) {
                        notas = "NO SE DEJA NOTA";
                    }
                    String mes_aÃ±o = date.mes_aÃ±o();
                    String fecha = date.fecha();
                    String situacion = "DENTRO";
                    String num_tarjeta = "TARJETA PROPIA";
                    String entrada = date.hora();
                    String salida = "00:00";
                    String total = "00:00";
                    String autoriza = "BUNGE";
                    String matricula = "NO";
                    String matricula_remolque = "NO";
                    String casco = "NO";
                    String gafas = "NO";
                    String rejilla = "NO";
                    String trabajo = "TRABAJO";
                    bw.write(mes_aÃ±o + ';' + fecha + ';' + situacion + ';' + cod_tar[0] + ';' + cod_tar[1] + ';'
                            + cod_tar[2] + ';' + cod_tar[3] + ';' + cod_tar[4] + ';' + num_tarjeta + ';'
                            + trabajo + ';' + entrada + ';' + salida + ';' + total
                            + ';' + autoriza + ';' + matricula + ';' + matricula_remolque + ';' + casco
                            + ';' + gafas + ';' + rejilla + ";" + notas + ";" + i + "\n");
                }

            }
            bw.flush();
            brd.close();
            brbd.close();
            bw.close();
            if (d == 0) {
                JOptionPane.showMessageDialog(null, "\nNO SE ENCONTRARON DATOS PARA\nREALIZAR LA ENTRADA");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void EntradaNombreApellido() {
        String line2;
        int i = 0;
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(fichero));
            while ((line2 = br.readLine()) != null) {
                String[] cod_tar = line2.split(";");
                if (cod_tar[4].equalsIgnoreCase(txtNombreEntrada.getText()) && cod_tar[5].equalsIgnoreCase(txtApellidoEntrada.getText()) && cod_tar[2].equalsIgnoreCase("DENTRO")) {
                    JOptionPane.showMessageDialog(null, "\nEsta persona ya estÃ¡ dentro de la empresa.");
                    br.close();
                    return;
                } else {
                    i++;
                }
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
        String line;
        int d = 0;
        try {
            BufferedReader brbd = null;
            BufferedWriter bw = null;
            brbd = new BufferedReader(new FileReader(bd));
            br = new BufferedReader(new FileReader(fichero));
            bw = new BufferedWriter(new FileWriter(fichero, true));
            if (txtNombreEntrada.getText().equals("") || txtApellidoEntrada.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "\nNo se encontraron datos.");
                br.close();
                brbd.close();
                return;
            }

            while ((line = brbd.readLine()) != null) {
                String[] cod_tar = line.split(";");
                if ((cod_tar[1].equalsIgnoreCase(txtNombreEntrada.getText()) && cod_tar[2].equalsIgnoreCase(txtApellidoEntrada.getText()))) {
                    d++;
                    String notas = NotasEntradaSalida.getText();
                    if (NotasEntradaSalida.getText().equals("")) {
                        notas = "NO SE DEJA NOTA";
                    }
                    String mes_aÃ±o = date.mes_aÃ±o();
                    String fecha = date.fecha();
                    String situacion = "DENTRO";
                    String num_tarjeta = "TARJETA PROPIA";
                    String entrada = date.hora();
                    String salida = "00:00";
                    String total = "00:00";
                    String autoriza = "BUNGE";
                    String matricula = "NO";
                    String matricula_remolque = "NO";
                    String casco = "NO";
                    String gafas = "NO";
                    String rejilla = "NO";
                    String trabajo = "TRABAJO";
                    bw.write(mes_aÃ±o + ';' + fecha + ';' + situacion + ';' + cod_tar[0] + ';' + cod_tar[1] + ';'
                            + cod_tar[2] + ';' + cod_tar[3] + ';' + cod_tar[4] + ';' + num_tarjeta + ';'
                            + trabajo + ';' + entrada + ';' + salida + ';' + total
                            + ';' + autoriza + ';' + matricula + ';' + matricula_remolque + ';' + casco
                            + ';' + gafas + ';' + rejilla + ";" + notas + ";" + i + "\n");
                }

            }
            bw.flush();
            br.close();
            brbd.close();
            bw.close();
            if (d == 0) {
                JOptionPane.showMessageDialog(null, "\nNo se encontraron datos.");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void SalidaNombreApellido() {
        String line;
        int i = 0;
        BufferedReader br = null;
        BufferedWriter bw = null;
        try {
            br = new BufferedReader(new FileReader(fichero));
            bw = new BufferedWriter(new FileWriter(fichero_temporal));

            if (txtNombreSalida.getText().equals("") || txtApellidoSalida.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "\nNo se encontraron datos.");
                return;
            }
            while ((line = br.readLine()) != null) {
                String[] busqueda = line.split(";");
                if (busqueda[4].equalsIgnoreCase(txtNombreSalida.getText())
                        && busqueda[5].equalsIgnoreCase(txtApellidoSalida.getText())
                        && busqueda[11].equals("00:00")) {
                    i++;
                    busqueda[11] = (busqueda[11].replace(busqueda[11], date.hora()));
                    busqueda[2] = (busqueda[2].replace(busqueda[2], "FUERA"));

                    //SALIDA
                    String sCadena = busqueda[10];
                    String sSubCadena = sCadena.substring(0, 2);
                    String sSubCadena1 = sCadena.substring(3, 5);
                    int horasEntrada = Integer.parseInt(sSubCadena);
                    int minEntrada = Integer.parseInt(sSubCadena1);
                    int horas_entrada = horasEntrada;
                    int min_entrada = minEntrada;

                    //ENTRADA
                    String sCadena2 = busqueda[11];
                    String sSubCadena3 = sCadena2.substring(0, 2);
                    String sSubCadena4 = sCadena2.substring(3, 5);
                    int horasSalida = Integer.parseInt(sSubCadena3);
                    int minSalida = Integer.parseInt(sSubCadena4);
                    int horas_salida = horasSalida;
                    int min_salida = minSalida;

                    //CALCULOS
                    if (horas_entrada == horas_salida && min_entrada <= min_salida) {

                        int total_horas = (horas_entrada - horas_salida);
                        int total_min = (min_salida - min_entrada);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada > horas_salida && min_entrada > min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_min_entrada = (60 - min_entrada);
                        int total_horas = (horas_salida + total_horas_entrada - 1);
                        int total_min = (total_min_entrada + min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada > horas_salida && min_entrada == min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas = (total_horas_entrada + horas_salida);
                        int total_min = (min_entrada - min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada > horas_salida && min_entrada < min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas = (total_horas_entrada + horas_salida);
                        int total_min_salida = (60 - min_salida);
                        int total_min_entrada = (60 - min_entrada);
                        int total_min = (total_min_entrada - total_min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada < horas_salida && min_entrada == min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas_salida = (24 - horas_salida);
                        int total_horas = (total_horas_entrada - total_horas_salida);
                        int total_min = (min_entrada - min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada < horas_salida && min_entrada < min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas_salida = (24 - horas_salida);
                        int total_horas = (total_horas_entrada - total_horas_salida);
                        int total_min_salida = (60 - min_salida);
                        int total_min_entrada = (60 - min_entrada);
                        int total_min = (total_min_entrada - total_min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada < horas_salida && min_entrada > min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas_salida = (24 - horas_salida);
                        int total_horas = (total_horas_entrada - total_horas_salida - 1);
                        int total_min_entrada = (60 - min_entrada);
                        int total_min = (total_min_entrada + min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                }
                bw.write(busqueda[0] + ';' + busqueda[1] + ';' + busqueda[2] + ';' + busqueda[3] + ';' + busqueda[4] + ';'
                        + busqueda[5] + ';' + busqueda[6] + ';' + busqueda[7] + ';' + busqueda[8] + ';' + busqueda[9] + ';'
                        + busqueda[10] + ';' + busqueda[11] + ';' + busqueda[12] + ';' + busqueda[13] + ';' + busqueda[14] + ';'
                        + busqueda[15] + ';' + busqueda[16] + ';' + busqueda[17] + ';'
                        + busqueda[18] + ';' + busqueda[19] + ";" + busqueda[20] + "\n");
            }
            bw.flush();
            br.close();
            bw.close();
            if (i == 0) {
                JOptionPane.showMessageDialog(null, "\nNo se encontraron datos.");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
        fichero.delete();
        fichero_temporal.renameTo(fichero);
    }

    public void SalidaPorCodigo() {
        String line;
        int i = 0;
        BufferedReader br = null;
        BufferedWriter bw = null;
        try {
            br = new BufferedReader(new FileReader(fichero));
            bw = new BufferedWriter(new FileWriter(fichero_temporal));

            if (CodigoTarjetaSalida.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "\nNo se encontraron datos.");
                 br.close();
                return;
            }
            while ((line = br.readLine()) != null) {
                String[] busqueda = line.split(";");
                if (busqueda[7].equals(CodigoTarjetaSalida.getText()) && busqueda[11].equals("00:00")) {
                    i++;
                    busqueda[11] = (busqueda[11].replace(busqueda[11], date.hora()));
                    busqueda[2] = (busqueda[2].replace(busqueda[2], "FUERA"));

                    //SALIDA
                    String sCadena = busqueda[10];
                    String sSubCadena = sCadena.substring(0, 2);
                    String sSubCadena1 = sCadena.substring(3, 5);
                    int horasEntrada = Integer.parseInt(sSubCadena);
                    int minEntrada = Integer.parseInt(sSubCadena1);
                    int horas_entrada = horasEntrada;
                    int min_entrada = minEntrada;

                    //ENTRADA
                    String sCadena2 = busqueda[11];
                    String sSubCadena3 = sCadena2.substring(0, 2);
                    String sSubCadena4 = sCadena2.substring(3, 5);
                    int horasSalida = Integer.parseInt(sSubCadena3);
                    int minSalida = Integer.parseInt(sSubCadena4);
                    int horas_salida = horasSalida;
                    int min_salida = minSalida;

                    //CALCULOS
                    if (horas_entrada == horas_salida && min_entrada <= min_salida) {

                        int total_horas = (horas_entrada - horas_salida);
                        int total_min = (min_salida - min_entrada);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada > horas_salida && min_entrada > min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_min_entrada = (60 - min_entrada);
                        int total_horas = (horas_salida + total_horas_entrada - 1);
                        int total_min = (total_min_entrada + min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada > horas_salida && min_entrada == min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas = (total_horas_entrada + horas_salida);
                        int total_min = (min_entrada - min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada > horas_salida && min_entrada < min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas = (total_horas_entrada + horas_salida);
                        int total_min_salida = (60 - min_salida);
                        int total_min_entrada = (60 - min_entrada);
                        int total_min = (total_min_entrada - total_min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada < horas_salida && min_entrada == min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas_salida = (24 - horas_salida);
                        int total_horas = (total_horas_entrada - total_horas_salida);
                        int total_min = (min_entrada - min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada < horas_salida && min_entrada < min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas_salida = (24 - horas_salida);
                        int total_horas = (total_horas_entrada - total_horas_salida);
                        int total_min_salida = (60 - min_salida);
                        int total_min_entrada = (60 - min_entrada);
                        int total_min = (total_min_entrada - total_min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada < horas_salida && min_entrada > min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas_salida = (24 - horas_salida);
                        int total_horas = (total_horas_entrada - total_horas_salida - 1);
                        int total_min_entrada = (60 - min_entrada);
                        int total_min = (total_min_entrada + min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                }
                bw.write(busqueda[0] + ';' + busqueda[1] + ';' + busqueda[2] + ';' + busqueda[3] + ';' + busqueda[4] + ';'
                        + busqueda[5] + ';' + busqueda[6] + ';' + busqueda[7] + ';' + busqueda[8] + ';' + busqueda[9] + ';'
                        + busqueda[10] + ';' + busqueda[11] + ';' + busqueda[12] + ';' + busqueda[13] + ';' + busqueda[14] + ';'
                        + busqueda[15] + ';' + busqueda[16] + ';' + busqueda[17] + ';'
                        + busqueda[18] + ';' + busqueda[19] + ";" + busqueda[20] + "\n");
            }
            bw.flush();
            br.close();
            bw.close();
            if (i == 0) {
                JOptionPane.showMessageDialog(null, "\nNo se encontraron datos.");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
        fichero.delete();
        fichero_temporal.renameTo(fichero);
    }

    private void btnConTarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConTarjetaActionPerformed
        new BaseDatosTarjeta().setVisible(true);
    }//GEN-LAST:event_btnConTarjetaActionPerformed

    private void btnSinTarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSinTarjetaActionPerformed
        new BaseDatosSinTarjeta().setVisible(true);
    }//GEN-LAST:event_btnSinTarjetaActionPerformed

    private void btnEntradaSalidaLlavesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntradaSalidaLlavesActionPerformed
        new Llaves().setVisible(true);
    }//GEN-LAST:event_btnEntradaSalidaLlavesActionPerformed

    private void btnListaLlavesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListaLlavesActionPerformed
        new ListaLlaves().setVisible(true);
    }//GEN-LAST:event_btnListaLlavesActionPerformed

    private void btnEnvioPaquetesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnvioPaquetesActionPerformed
        new EnvioPaquetes().setVisible(true);
    }//GEN-LAST:event_btnEnvioPaquetesActionPerformed

    private void btnRecepcionPaquetesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecepcionPaquetesActionPerformed
        new RecepcionPaquetes().setVisible(true);
    }//GEN-LAST:event_btnRecepcionPaquetesActionPerformed

    private void btnEntregaRopaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntregaRopaActionPerformed
        new EntregaRopa().setVisible(true);
    }//GEN-LAST:event_btnEntregaRopaActionPerformed

    private void btnStockRopaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStockRopaActionPerformed
        new StockRopa().setVisible(true);
    }//GEN-LAST:event_btnStockRopaActionPerformed

    private void btnAlmacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlmacenActionPerformed
        new Almacen().setVisible(true);
    }//GEN-LAST:event_btnAlmacenActionPerformed

    private void btnAlarmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlarmaActionPerformed
        new Alarmas().setVisible(true);
    }//GEN-LAST:event_btnAlarmaActionPerformed

    private void btnLlavesCafeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLlavesCafeActionPerformed
        new LlavesCafe().setVisible(true);
    }//GEN-LAST:event_btnLlavesCafeActionPerformed

    private void btnListaMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListaMaterialActionPerformed
        new ListaMaterial().setVisible(true);
    }//GEN-LAST:event_btnListaMaterialActionPerformed

    private void NotasEntradaSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NotasEntradaSalidaActionPerformed
        if (!CodigoTarjetaSalida.getText().equals("")) {
            SalidaPorCodigo();
            NumPersonas();
            MostrarTabla();
        } else if (!CodigoTarjetaEntrada.getText().equals("")) {
            EntradaPorCodigo();
            NumPersonas();
            MostrarTabla();
        } else if (!txtNombreEntrada.getText().equals("") && !txtApellidoEntrada.getText().equals("")) {
            EntradaNombreApellido();
            NumPersonas();
            MostrarTabla();
        } else {
            SalidaNombreApellido();
            NumPersonas();
            MostrarTabla();
        }
        NumPersonas();
        CodigoTarjetaSalida.setText(null);
        CodigoTarjetaEntrada.setText(null);
        txtNombreEntrada.setText(null);
        txtApellidoEntrada.setText(null);
        txtNombreSalida.setText(null);
        txtApellidoSalida.setText(null);
        NotasEntradaSalida.setText(null);
        NumPersonas();
    }//GEN-LAST:event_NotasEntradaSalidaActionPerformed

    private void CodigoTarjetaSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodigoTarjetaSalidaActionPerformed
        if (!CodigoTarjetaSalida.getText().equals("")) {
            SalidaPorCodigo();
            NumPersonas();
            MostrarTabla();
        } else if (!CodigoTarjetaEntrada.getText().equals("")) {
            EntradaPorCodigo();
            NumPersonas();
            MostrarTabla();
        } else if (!txtNombreEntrada.getText().equals("") && !txtApellidoEntrada.getText().equals("")) {
            EntradaNombreApellido();
            NumPersonas();
            MostrarTabla();
        } else {
            SalidaNombreApellido();
            NumPersonas();
            MostrarTabla();
        }
        NumPersonas();
        CodigoTarjetaSalida.setText(null);
        CodigoTarjetaEntrada.setText(null);
        txtNombreEntrada.setText(null);
        txtApellidoEntrada.setText(null);
        txtNombreSalida.setText(null);
        txtApellidoSalida.setText(null);
        NotasEntradaSalida.setText(null);
        NumPersonas();
    }//GEN-LAST:event_CodigoTarjetaSalidaActionPerformed

    private void txtApellidoSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoSalidaActionPerformed
        if (!CodigoTarjetaSalida.getText().equals("")) {
            SalidaPorCodigo();
            NumPersonas();
            MostrarTabla();
        } else if (!CodigoTarjetaEntrada.getText().equals("")) {
            EntradaPorCodigo();
            NumPersonas();
            MostrarTabla();
        } else if (!txtNombreEntrada.getText().equals("") && !txtApellidoEntrada.getText().equals("")) {
            EntradaNombreApellido();
            NumPersonas();
            MostrarTabla();
        } else {
            SalidaNombreApellido();
            NumPersonas();
            MostrarTabla();
        }
        NumPersonas();
        CodigoTarjetaSalida.setText(null);
        CodigoTarjetaEntrada.setText(null);
        txtNombreEntrada.setText(null);
        txtApellidoEntrada.setText(null);
        txtNombreSalida.setText(null);
        txtApellidoSalida.setText(null);
        NotasEntradaSalida.setText(null);
        NumPersonas();
    }//GEN-LAST:event_txtApellidoSalidaActionPerformed

    private void btnAlalrmas2021ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlalrmas2021ActionPerformed
        new Alarmas_2021().setVisible(true);
    }//GEN-LAST:event_btnAlalrmas2021ActionPerformed

    private void btnEntrada2019_2020ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrada2019_2020ActionPerformed
        new ListaEntrada2019_2020().setVisible(true);
    }//GEN-LAST:event_btnEntrada2019_2020ActionPerformed

    private void btnSalidaRopa2021ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalidaRopa2021ActionPerformed
        new Ropa_2020_2021().setVisible(true);
    }//GEN-LAST:event_btnSalidaRopa2021ActionPerformed

    private void btnEntrada2020_2021ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrada2020_2021ActionPerformed
        new ListaEntrada2020_2021().setVisible(true);
    }//GEN-LAST:event_btnEntrada2020_2021ActionPerformed

    private void btnEntradaSalida2021ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntradaSalida2021ActionPerformed
        new ListaEntrada2021().setVisible(true);
    }//GEN-LAST:event_btnEntradaSalida2021ActionPerformed

    private void btnLlavesExplosimetroWalkie2021ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLlavesExplosimetroWalkie2021ActionPerformed
        new Llaves_2020_2021().setVisible(true);
    }//GEN-LAST:event_btnLlavesExplosimetroWalkie2021ActionPerformed

    private void btnAlmacen2021ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlmacen2021ActionPerformed
        new Almacen_2020_2021().setVisible(true);
    }//GEN-LAST:event_btnAlmacen2021ActionPerformed

    private void btnEnvioPaquetes2021ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnvioPaquetes2021ActionPerformed
        new Envios_2020_2021().setVisible(true);
    }//GEN-LAST:event_btnEnvioPaquetes2021ActionPerformed

    private void btnRecepcionPaquetes2021ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecepcionPaquetes2021ActionPerformed
        new Recepcion2020_2021().setVisible(true);
    }//GEN-LAST:event_btnRecepcionPaquetes2021ActionPerformed

    private void btn2VisitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2VisitasActionPerformed
        new Visitas().setVisible(true);
    }//GEN-LAST:event_btn2VisitasActionPerformed

    private void btn2RegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2RegistrosActionPerformed
        new ListaEntradaSalida().setVisible(true);
    }//GEN-LAST:event_btn2RegistrosActionPerformed

    private void btn2GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2GuardarActionPerformed
        if (!CodigoTarjetaSalida.getText().equals("")) {
            SalidaPorCodigo();
            NumPersonas();
            MostrarTabla();
        } else if (!CodigoTarjetaEntrada.getText().equals("")) {
            EntradaPorCodigo();
            NumPersonas();
            MostrarTabla();
        } else if (!txtNombreEntrada.getText().equals("") && !txtApellidoEntrada.getText().equals("")) {
            EntradaNombreApellido();
            NumPersonas();
            MostrarTabla();
        } else {
            SalidaNombreApellido();
            NumPersonas();
            MostrarTabla();
        }
        NumPersonas();
        CodigoTarjetaSalida.setText(null);
        CodigoTarjetaEntrada.setText(null);
        txtNombreEntrada.setText(null);
        txtApellidoEntrada.setText(null);
        txtNombreSalida.setText(null);
        txtApellidoSalida.setText(null);
        NotasEntradaSalida.setText(null);
        NumPersonas();
    }//GEN-LAST:event_btn2GuardarActionPerformed

    private void btnSalirMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirMenuActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirMenuActionPerformed

    private void btnEmergenciasMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmergenciasMenuActionPerformed
        new Emergencias().setVisible(true);
    }//GEN-LAST:event_btnEmergenciasMenuActionPerformed

    private void btnListadoTelefonicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListadoTelefonicoActionPerformed
        new ListadoTelefonico().setVisible(true);
    }//GEN-LAST:event_btnListadoTelefonicoActionPerformed

    private void btnActualizarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarMenuActionPerformed
        MostrarTabla();
        NumPersonas();
    }//GEN-LAST:event_btnActualizarMenuActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CodigoTarjetaEntrada;
    private javax.swing.JTextField CodigoTarjetaSalida;
    private javax.swing.JTextField NotasEntradaSalida;
    private javax.swing.JTextField NumPersonas;
    private javax.swing.JTable TablaEntradaSalida;
    private javax.swing.JButton btn2Guardar;
    private javax.swing.JButton btn2Registros;
    private javax.swing.JButton btn2Visitas;
    private javax.swing.JMenuItem btnActualizarMenu;
    private javax.swing.JMenuItem btnAlalrmas2021;
    private javax.swing.JMenuItem btnAlarma;
    private javax.swing.JMenuItem btnAlmacen;
    private javax.swing.JMenuItem btnAlmacen2021;
    private javax.swing.JMenuItem btnConTarjeta;
    private javax.swing.JMenuItem btnEmergenciasMenu;
    private javax.swing.JMenuItem btnEntrada2019_2020;
    private javax.swing.JMenuItem btnEntrada2020_2021;
    private javax.swing.JMenuItem btnEntradaSalida2021;
    private javax.swing.JMenuItem btnEntradaSalidaLlaves;
    private javax.swing.JMenuItem btnEntregaRopa;
    private javax.swing.JMenuItem btnEnvioPaquetes;
    private javax.swing.JMenuItem btnEnvioPaquetes2021;
    private javax.swing.JMenuItem btnListaLlaves;
    private javax.swing.JMenuItem btnListaMaterial;
    private javax.swing.JMenuItem btnListadoTelefonico;
    private javax.swing.JMenuItem btnLlavesCafe;
    private javax.swing.JMenuItem btnLlavesExplosimetroWalkie2021;
    private javax.swing.JMenuItem btnRecepcionPaquetes;
    private javax.swing.JMenuItem btnRecepcionPaquetes2021;
    private javax.swing.JMenuItem btnSalidaRopa2021;
    private javax.swing.JMenuItem btnSalirMenu;
    private javax.swing.JMenuItem btnSinTarjeta;
    private javax.swing.JMenuItem btnStockRopa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu15;
    private javax.swing.JMenu jMenu16;
    private javax.swing.JMenu jMenu18;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuBaaseDatos;
    private javax.swing.JTextField txtApellidoEntrada;
    private javax.swing.JTextField txtApellidoSalida;
    private javax.swing.JTextField txtNombreEntrada;
    private javax.swing.JTextField txtNombreSalida;
    // End of variables declaration//GEN-END:variables
}
