/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jframe;

import jframe.menuPrincipal.MiRenderer;
import jframe.menuPrincipal.date;
import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Gustavo_Senorans
 */
public final class RecepcionPaquetes extends javax.swing.JFrame {

    date date = new date();
    String user = System.getProperty("user.name");
    File fichero = new File("C:\\Users\\" + user + "\\Documents\\NetBeansProjects\\JFrame\\src\\file\\entrada.csv");
    File fichero_temporal = new File("C:\\Users\\" + user + "\\Documents\\NetBeansProjects\\JFrame\\src\\file\\temporal.csv");
    File ficheroRecepcionPaquetes = new File("C:\\Users\\" + user + "\\Documents\\NetBeansProjects\\JFrame\\src\\file\\recepcion_paquetes.csv");
    File ficheroReccepcionPaquetes2 = new File("C:\\Users\\" + user + "\\Desktop\\Fichero_Reccepcion_Paquetes.csv");

    /**
     * Creates new form RecepcionPaquetes
     */
    public void ficheroApp() {
        if (!fichero.exists()) {
            JOptionPane.showMessageDialog(null, "\nHay un error en los fichero\nhable con el administrador.");
        }
    }

    public RecepcionPaquetes() {
        MiRenderer m = new MiRenderer();
        initComponents();
        ficheroApp();
        this.setTitle("Recepción de Paquetes");
        this.setLocationRelativeTo(RecepcionPaquetes.this);
        setIconImage(new ImageIcon(getClass().getResource("/img/IconoJFrame.png")).getImage());
        this.getContentPane().setBackground(new Color(243, 233, 147));
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setResizable(true);
        NumPersonas();
        modificarFileEntrada();
        MostrarTabla();
        datos();
        tablaRecepcionPaquetes.getTableHeader().setFont(new Font("Courier New", 1, 18));
        tablaRecepcionPaquetes.getTableHeader().setBackground(Color.blue);
        tablaRecepcionPaquetes.getTableHeader().setForeground(Color.white);
        tablaRecepcionPaquetes.getTableHeader().setPreferredSize(new java.awt.Dimension(50, 50));
        tablaRecepcionPaquetes.setRowHeight(30);
        tablaRecepcionPaquetes.setRowMargin(10);

        for (int i = 0; i < tablaRecepcionPaquetes.getColumnCount(); i++) {
            tablaRecepcionPaquetes.getColumnModel().getColumn(i).setCellRenderer(m);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRecepcionPaquetes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        NumPersonas = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        btnGuardarModificacion1 = new javax.swing.JButton();
        btnModificarId1 = new javax.swing.JButton();
        btnBuscar1 = new javax.swing.JButton();
        btnGuardar1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtAgenciaTransporte = new javax.swing.JTextField();
        txtRemitente = new javax.swing.JTextField();
        txtNumeroPaquetes = new javax.swing.JTextField();
        txtDestinatario = new javax.swing.JTextField();
        txtEntregadoA = new javax.swing.JTextField();
        txtNotas = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtMesAno = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        txtHoraRecepcion = new javax.swing.JTextField();
        txtNombreTransportista = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnActualizarMenu = new javax.swing.JMenuItem();
        btnEliminar = new javax.swing.JMenuItem();
        btnLimpiarDatosMenu = new javax.swing.JMenuItem();
        btnFicheroMenu = new javax.swing.JMenuItem();
        btnSalirMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(243, 233, 147));

        tablaRecepcionPaquetes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tablaRecepcionPaquetes.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        tablaRecepcionPaquetes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mes - Año", "Fecha", "Hora", "Nombre de Transportista", "Agencia de Transportes", "Remitente", "Número de Paquetes", "Destinatario", "Entrado a", "Notas", "Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaRecepcionPaquetes.setSelectionBackground(new java.awt.Color(153, 204, 255));
        tablaRecepcionPaquetes.getTableHeader().setReorderingAllowed(false);
        tablaRecepcionPaquetes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaRecepcionPaquetesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaRecepcionPaquetes);

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Recepción Paquetes");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("Personas dentro de Planta:");
        jLabel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        NumPersonas.setEditable(false);
        NumPersonas.setBackground(new java.awt.Color(255, 255, 255));
        NumPersonas.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        NumPersonas.setForeground(new java.awt.Color(204, 0, 0));
        NumPersonas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NumPersonas.setBorder(null);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo.png"))); // NOI18N
        jLabel14.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnGuardarModificacion1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnGuardarModificacion1.setForeground(new java.awt.Color(0, 0, 255));
        btnGuardarModificacion1.setMnemonic('r');
        btnGuardarModificacion1.setText("Guardar Modificación");
        btnGuardarModificacion1.setToolTipText("<html>Guardar modificación.<br/>Tambien puede usar Alt + r</html>");
        btnGuardarModificacion1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGuardarModificacion1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardarModificacion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarModificacion1ActionPerformed(evt);
            }
        });

        btnModificarId1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnModificarId1.setForeground(new java.awt.Color(0, 0, 255));
        btnModificarId1.setMnemonic('i');
        btnModificarId1.setText("ID");
        btnModificarId1.setToolTipText("<html>Modificar ID.<br/>Tambien puede usar Alt + i</html>");
        btnModificarId1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnModificarId1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModificarId1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarId1ActionPerformed(evt);
            }
        });

        btnBuscar1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnBuscar1.setForeground(new java.awt.Color(0, 0, 255));
        btnBuscar1.setMnemonic('b');
        btnBuscar1.setText("Buscar");
        btnBuscar1.setToolTipText("<html>______________________________________<br/><br/>Modelo de búsquedas<br/>______________________________________<br/>- Destinatario<br/>- Agencia de transporte<br/>- Mes-Año (mm/yy)  - Remitente<br/>- Mes-Año (mm/yy)  - Agencia de transporte<br/>- Fecha (dd/mm/yy) - Remitente<br/>- Fecha (dd/mm/yy) - Agencia de transporte<br/>Tambien puede usar Alt + b<br/></html>");
        btnBuscar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBuscar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar1ActionPerformed(evt);
            }
        });

        btnGuardar1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnGuardar1.setForeground(new java.awt.Color(0, 0, 255));
        btnGuardar1.setMnemonic('g');
        btnGuardar1.setText("Guardar");
        btnGuardar1.setToolTipText("<html>Guardar entrada.<br/>Tambien puede usar Alt + g</html>");
        btnGuardar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGuardar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar1ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 153, 0));

        txtAgenciaTransporte.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtAgenciaTransporte.setBorder(null);

        txtRemitente.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtRemitente.setBorder(null);

        txtNumeroPaquetes.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtNumeroPaquetes.setBorder(null);

        txtDestinatario.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtDestinatario.setBorder(null);

        txtEntregadoA.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtEntregadoA.setBorder(null);

        txtNotas.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtNotas.setBorder(null);

        jLabel13.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel13.setText("Notas:");

        txtId.setEditable(false);
        txtId.setBackground(new java.awt.Color(255, 255, 255));
        txtId.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtId.setBorder(null);

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel3.setText("Mes - Año:");

        jLabel4.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel4.setText("Fecha:");

        jLabel5.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel5.setText("Hora Recepción:");

        jLabel6.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel6.setText("Nombre Transportista:");

        jLabel7.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel7.setText("Agencia Transporte:");

        jLabel8.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel8.setText("Remitente:");

        jLabel9.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel9.setText("Destinatario:");

        jLabel10.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel10.setText("Número Paquetes:");

        jLabel11.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel11.setText("Id:");

        jLabel12.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel12.setText("Entregado a:");

        txtMesAno.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtMesAno.setBorder(null);

        txtFecha.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtFecha.setBorder(null);

        txtHoraRecepcion.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtHoraRecepcion.setBorder(null);

        txtNombreTransportista.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtNombreTransportista.setBorder(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMesAno, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombreTransportista, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtHoraRecepcion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAgenciaTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEntregadoA, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNumeroPaquetes, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNotas, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(txtRemitente, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMesAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHoraRecepcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreTransportista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAgenciaTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEntregadoA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNumeroPaquetes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRemitente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(NumPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnGuardar1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscar1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnModificarId1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGuardarModificacion1))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 109, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(NumPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar1)
                    .addComponent(btnBuscar1)
                    .addComponent(btnModificarId1)
                    .addComponent(btnGuardarModificacion1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuBar1.setBorder(null);
        jMenuBar1.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N

        jMenu1.setBorder(null);
        jMenu1.setForeground(new java.awt.Color(0, 0, 255));
        jMenu1.setMnemonic('m');
        jMenu1.setText("Menú");
        jMenu1.setToolTipText("<html>Menú principal<br/>recepción paquetes<br/>Tambien se puede usar Alt + m</html>");
        jMenu1.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N

        btnActualizarMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnActualizarMenu.setForeground(new java.awt.Color(0, 0, 255));
        btnActualizarMenu.setText("Actualizar");
        btnActualizarMenu.setBorder(null);
        btnActualizarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarMenuActionPerformed(evt);
            }
        });
        jMenu1.add(btnActualizarMenu);

        btnEliminar.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 0, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.setBorder(null);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jMenu1.add(btnEliminar);

        btnLimpiarDatosMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnLimpiarDatosMenu.setForeground(new java.awt.Color(0, 0, 255));
        btnLimpiarDatosMenu.setText("Limpiar");
        btnLimpiarDatosMenu.setBorder(null);
        btnLimpiarDatosMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarDatosMenuActionPerformed(evt);
            }
        });
        jMenu1.add(btnLimpiarDatosMenu);

        btnFicheroMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnFicheroMenu.setForeground(new java.awt.Color(0, 0, 255));
        btnFicheroMenu.setText("Crear Fichero");
        btnFicheroMenu.setBorder(null);
        btnFicheroMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFicheroMenuActionPerformed(evt);
            }
        });
        jMenu1.add(btnFicheroMenu);

        btnSalirMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnSalirMenu.setForeground(new java.awt.Color(255, 0, 0));
        btnSalirMenu.setMnemonic('s');
        btnSalirMenu.setText("Salir");
        btnSalirMenu.setToolTipText("<html>Pulsar para salir<br/>Tambien se puede usar Alt + s<br/>y a continuación entrer</html>");
        btnSalirMenu.setBorder(null);
        btnSalirMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirMenuActionPerformed(evt);
            }
        });
        jMenu1.add(btnSalirMenu);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void Buscar() {
        String line;
        try {
            BufferedReader br = null;
            br = new BufferedReader(new FileReader(ficheroRecepcionPaquetes));
            while ((line = br.readLine()) != null) {
                String[] cod_tar = line.split(";");
                if ((txtFecha.getText().equalsIgnoreCase(cod_tar[1]) && txtRemitente.getText().equalsIgnoreCase(cod_tar[5]))
                        || (txtDestinatario.getText().equalsIgnoreCase(cod_tar[7]))
                        || (txtAgenciaTransporte.getText().equalsIgnoreCase(cod_tar[4]))
                        || (txtFecha.getText().equalsIgnoreCase(cod_tar[1]) && txtAgenciaTransporte.getText().equalsIgnoreCase(cod_tar[4]))
                        || (txtMesAno.getText().equalsIgnoreCase(cod_tar[0]) && txtRemitente.getText().equalsIgnoreCase(cod_tar[5]))
                        || (txtMesAno.getText().equalsIgnoreCase(cod_tar[0]) && txtAgenciaTransporte.getText().equalsIgnoreCase(cod_tar[4]))) {
                    DefaultTableModel model = (DefaultTableModel) tablaRecepcionPaquetes.getModel();
                    TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<>(model);
                    tablaRecepcionPaquetes.setRowSorter(elQueOrdena);
                    Vector row = new Vector();
                    row.add(cod_tar[0]);
                    row.add(cod_tar[1]);
                    row.add(cod_tar[2]);
                    row.add(cod_tar[3]);
                    row.add(cod_tar[4]);
                    row.add(cod_tar[5]);
                    row.add(cod_tar[6]);
                    row.add(cod_tar[7]);
                    row.add(cod_tar[8]);
                    row.add(cod_tar[9]);
                    row.add(cod_tar[10]);
                    model.addRow(row);
                }
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void Seleccionar() {
        if (tablaRecepcionPaquetes.getSelectedRowCount() > 0) {
            txtMesAno.setText(tablaRecepcionPaquetes.getValueAt(tablaRecepcionPaquetes.getSelectedRow(), 0).toString());
            txtFecha.setText(tablaRecepcionPaquetes.getValueAt(tablaRecepcionPaquetes.getSelectedRow(), 1).toString());
            txtHoraRecepcion.setText(tablaRecepcionPaquetes.getValueAt(tablaRecepcionPaquetes.getSelectedRow(), 2).toString());
            txtNombreTransportista.setText(tablaRecepcionPaquetes.getValueAt(tablaRecepcionPaquetes.getSelectedRow(), 3).toString());
            txtAgenciaTransporte.setText(tablaRecepcionPaquetes.getValueAt(tablaRecepcionPaquetes.getSelectedRow(), 4).toString());
            txtRemitente.setText(tablaRecepcionPaquetes.getValueAt(tablaRecepcionPaquetes.getSelectedRow(), 5).toString());
            txtNumeroPaquetes.setText(tablaRecepcionPaquetes.getValueAt(tablaRecepcionPaquetes.getSelectedRow(), 6).toString());
            txtDestinatario.setText(tablaRecepcionPaquetes.getValueAt(tablaRecepcionPaquetes.getSelectedRow(), 7).toString());
            txtEntregadoA.setText(tablaRecepcionPaquetes.getValueAt(tablaRecepcionPaquetes.getSelectedRow(), 8).toString());
            txtNotas.setText(tablaRecepcionPaquetes.getValueAt(tablaRecepcionPaquetes.getSelectedRow(), 9).toString());
            txtId.setText(tablaRecepcionPaquetes.getValueAt(tablaRecepcionPaquetes.getSelectedRow(), 10).toString());
        }
    }

    public void MostrarTabla() {
        String line;
        BufferedReader br = null;
        DefaultTableModel model = (DefaultTableModel) tablaRecepcionPaquetes.getModel();
        TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(model);
        model.setRowCount(0);
        model.setRowCount(0);
        try {
            br = new BufferedReader(new FileReader(ficheroRecepcionPaquetes));
            while ((line = br.readLine()) != null) {
                String[] tabla = line.split(";");
                tablaRecepcionPaquetes.setRowSorter(elQueOrdena);
                Vector row = new Vector();
                row.add(tabla[0]);
                row.add(tabla[1]);
                row.add(tabla[2]);
                row.add(tabla[3]);
                row.add(tabla[4]);
                row.add(tabla[5]);
                row.add(tabla[6]);
                row.add(tabla[7]);
                row.add(tabla[8]);
                row.add(tabla[9]);
                row.add(tabla[10]);
                model.addRow(row);
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void GuardarModificaciones() {
        int i = 0;
        try {
            String line;
            String mes_ano = txtMesAno.getText();
            String fecha = txtFecha.getText();
            String horaRecepcion = txtHoraRecepcion.getText();
            String mombreTransportista = txtNombreTransportista.getText();
            String agenciaTransporte = txtAgenciaTransporte.getText();
            String remitente = txtRemitente.getText();
            String destinatario = txtDestinatario.getText();
            String numeroPaquetes = txtNumeroPaquetes.getText();
            String entregadoa = txtEntregadoA.getText();
            String notas = txtNotas.getText();
            String id = txtId.getText();
            BufferedReader br = null;
            BufferedWriter bw = null;
            br = new BufferedReader(new FileReader(ficheroRecepcionPaquetes));
            bw = new BufferedWriter(new FileWriter(fichero_temporal));

            while ((line = br.readLine()) != null) {
                String[] busqueda = line.split(";");
                if (busqueda[10].equals(id)) {
                    i++;
                    busqueda[0] = (busqueda[0].replace(busqueda[0], mes_ano));
                    busqueda[1] = (busqueda[1].replace(busqueda[1], fecha));
                    busqueda[2] = (busqueda[2].replace(busqueda[2], horaRecepcion));
                    busqueda[3] = (busqueda[3].replace(busqueda[3], mombreTransportista));
                    busqueda[4] = (busqueda[4].replace(busqueda[4], agenciaTransporte));
                    busqueda[5] = (busqueda[5].replace(busqueda[5], remitente));
                    busqueda[6] = (busqueda[6].replace(busqueda[6], numeroPaquetes));
                    busqueda[7] = (busqueda[7].replace(busqueda[7], destinatario));
                    busqueda[8] = (busqueda[8].replace(busqueda[8], entregadoa));
                    busqueda[9] = (busqueda[9].replace(busqueda[9], notas));
                    busqueda[10] = (busqueda[10].replace(busqueda[10], id));
                }
                bw.write(busqueda[0] + ';' + busqueda[1] + ';' + busqueda[2] + ';' + busqueda[3] + ';' + busqueda[4] + ';'
                        + busqueda[5] + ';' + busqueda[6] + ';' + busqueda[7] + ';' + busqueda[8] + ';' + busqueda[9] + ';' + busqueda[10] + "\n");
            }
            bw.flush();
            br.close();
            bw.close();
            if (i == 0) {
                JOptionPane.showMessageDialog(null, "\nNo se encuentran datos.");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, date.fecha() + "\nError: " + e);
        }
        ficheroRecepcionPaquetes.delete();
        fichero_temporal.renameTo(ficheroRecepcionPaquetes);
    }

    public void datos() {
        String line2;
        int i = 0;
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(ficheroRecepcionPaquetes));
            while ((line2 = br.readLine()) != null) {
                i++;
                String id = String.valueOf(i);
                txtId.setText(id);
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
        String mes_año = date.mes_año();
        txtMesAno.setText(mes_año);

        String fecha = date.fecha();
        txtFecha.setText(fecha);

        String hora_recepcion = date.hora();
        txtHoraRecepcion.setText(hora_recepcion);

        String nota = "NO SE DEJA NOTA";
        txtNotas.setText(nota);

    }

    public void GuardarEnvioPaquetes() {
        BufferedReader br = null;
        String line;
        int d = 0;
        try {
            BufferedWriter bw = null;
            br = new BufferedReader(new FileReader(ficheroRecepcionPaquetes));
            bw = new BufferedWriter(new FileWriter(ficheroRecepcionPaquetes, true));
            if ((line = br.readLine()) != null) {
                String[] busqueda = line.split(";");
                d++;

                String mes_ano = txtMesAno.getText();
                busqueda[0] = mes_ano;

                String fecha2 = txtFecha.getText();
                busqueda[1] = fecha2;

                String horaEnvio = txtHoraRecepcion.getText();
                busqueda[2] = horaEnvio;

                String nombreTransportista = txtNombreTransportista.getText();
                busqueda[3] = nombreTransportista;

                String agenciaTransporte = txtAgenciaTransporte.getText();
                busqueda[4] = agenciaTransporte;

                String entregadoPor = txtRemitente.getText();
                busqueda[5] = entregadoPor;

                String numPaquetes = txtNumeroPaquetes.getText();
                busqueda[6] = numPaquetes;

                String destinatario = txtDestinatario.getText();
                busqueda[7] = destinatario;

                String entregadoa = txtEntregadoA.getText();
                busqueda[8] = entregadoa;

                String notas2 = txtNotas.getText();
                busqueda[9] = notas2;

                String id2 = txtId.getText();
                busqueda[10] = id2;

                bw.write(busqueda[0] + ';' + busqueda[1] + ';' + busqueda[2] + ';' + busqueda[3] + ';' + busqueda[4] + ';'
                        + busqueda[5] + ';' + busqueda[6] + ';' + busqueda[7] + ';' + busqueda[8] + ';' + busqueda[9] + ';' + busqueda[10] + "\n");
            }
            bw.flush();
            br.close();
            bw.close();
            if (d == 0) {
                JOptionPane.showMessageDialog(null, "\nNo se guardan datos.");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, date.fecha() + "\nError: " + e);
        }
    }

    public void GuardarNuevoId() {
        try {
            String line;
            BufferedReader br = null;
            br = new BufferedReader(new FileReader(ficheroRecepcionPaquetes));
            while ((line = br.readLine()) != null) {
                String[] busqueda = line.split(";");
                if (txtId.getText().equals("") || txtId.getText().equals(busqueda[10])) {
                    JOptionPane.showMessageDialog(null, "\nEl Id está bacio o se repite el id.");
                    br.close();
                    return;
                } else if (txtNumeroPaquetes.getText().equals("")
                        || txtDestinatario.getText().equals("")
                        || txtEntregadoA.getText().equals("")
                        || txtNombreTransportista.getText().equals("")
                        || txtAgenciaTransporte.getText().equals("")
                        || txtNumeroPaquetes.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "\nFaltan campos por rellenar.");
                    br.close();
                    return;
                }
            }
            br.close();
            GuardarEnvioPaquetes();
            LimpiarCasillas();
            MostrarTabla();
            NumPersonas();
            datos();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, date.fecha() + "\nError: " + e);
        }

    }

    public void LimpiarCasillas() {
        txtMesAno.setText(null);
        txtFecha.setText(null);
        txtHoraRecepcion.setText(null);
        txtNombreTransportista.setText(null);
        txtAgenciaTransporte.setText(null);
        txtRemitente.setText(null);
        txtNumeroPaquetes.setText(null);
        txtDestinatario.setText(null);
        txtEntregadoA.setText(null);
        txtNotas.setText(null);
        txtId.setText(null);
    }

    public void NumPersonas() {
        String line;
        int i = 0;
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(fichero));
            while ((line = br.readLine()) != null) {
                String[] numPersonas = line.split(";");
                if (numPersonas[2].equals("DENTRO")) {
                    i++;
                    String numPersonasString = String.valueOf(i);
                    NumPersonas.setText(numPersonasString);
                } else {
                    String SinPersonasString = String.valueOf(i);
                    NumPersonas.setText(SinPersonasString);
                }
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void toExcel() {
        BufferedWriter bw = null;
        DefaultTableModel model = (DefaultTableModel) tablaRecepcionPaquetes.getModel();
        try {
            bw = new BufferedWriter(new FileWriter(ficheroReccepcionPaquetes2));
            for (int i = 0; i < model.getColumnCount(); i++) {
                bw.write(model.getColumnName(i) + "\t");
            }
            bw.write("\n");
            for (int i = 0; i < model.getRowCount(); i++) {
                for (int j = 0; j < model.getColumnCount(); j++) {
                    bw.write(model.getValueAt(i, j).toString() + "\t");
                }
                bw.write("\n");
            }
            bw.close();
            JOptionPane.showMessageDialog(null, "\nEl fichero se ha creado correctamente.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void EntradaMultiple() {
        String line2;
        int i = 0;
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(ficheroRecepcionPaquetes));
            while ((line2 = br.readLine()) != null) {
                i++;
                String id = String.valueOf(i);
                txtId.setText(id);
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }

        String mesano = date.mes_año();
        txtMesAno.setText(mesano);

        String fecha = date.fecha();
        txtFecha.setText(fecha);

        String hora = date.hora();
        txtHoraRecepcion.setText(hora);

        txtNombreTransportista.setText(txtNombreTransportista.getText());
        txtRemitente.setText(txtRemitente.getText());
        txtDestinatario.setText(txtDestinatario.getText());
        txtEntregadoA.setText(txtEntregadoA.getText());
        txtNotas.setText(txtNotas.getText());

        txtNumeroPaquetes.setText(null);
    }

    public void eliminarFila() {
        String line;
        BufferedReader br = null;
        BufferedWriter bw = null;
        ArrayList<String> al = new ArrayList<>();
        try {
            br = new BufferedReader(new FileReader(ficheroRecepcionPaquetes));
            bw = new BufferedWriter(new FileWriter(fichero_temporal));
            while ((line = br.readLine()) != null) {
                String[] tabla = line.split(";");
                al.add(tabla[0] + ';' + tabla[1] + ';' + tabla[2] + ';'
                        + tabla[3] + ';' + tabla[4] + ';' + tabla[5] + ';'
                        + tabla[6] + ';' + tabla[7] + ';' + tabla[8] + ';'
                        + tabla[9] + ';' + tabla[10] + "\n");
            }
            int i = Integer.parseInt(txtId.getText());
            int confirmado = JOptionPane.showOptionDialog(null,
                    "¿Esta seguro de eliminar los datos?",
                    "Eliminar datos",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null, new Object[]{"Si", "No"}, "No");
            switch (confirmado) {
                case JOptionPane.OK_OPTION:
                    al.remove(i);
                    JOptionPane.showMessageDialog(null, "Datos eliminados correctamente");
                    br.close();
                    break;
                case JOptionPane.NO_OPTION:
                    JOptionPane.showMessageDialog(null, "No se borrarán los datos");
                    br.close();
                    break;
                default:
                    br.close();
                    break;
            }
            for (String prueba : al) {
                bw.write(prueba);
            }
            bw.flush();
            br.close();
            bw.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
        ficheroRecepcionPaquetes.delete();
        fichero_temporal.renameTo(ficheroRecepcionPaquetes);
    }

    public String modificarFileEntrada() {
        BufferedReader br = null;
        BufferedWriter bw = null;
        String line;
        int i = 0;
        try {
            br = new BufferedReader(new FileReader(ficheroRecepcionPaquetes));
            bw = new BufferedWriter(new FileWriter(fichero_temporal));
            while ((line = br.readLine()) != null) {
                String[] tabla = line.split(";");
                tabla[0] = (tabla[0].replace(tabla[0], tabla[0]));
                tabla[1] = (tabla[1].replace(tabla[1], tabla[1]));
                tabla[2] = (tabla[2].replace(tabla[2], tabla[2]));
                tabla[3] = (tabla[3].replace(tabla[3], tabla[3]));
                tabla[4] = (tabla[4].replace(tabla[4], tabla[4]));
                tabla[5] = (tabla[5].replace(tabla[5], tabla[5]));
                tabla[6] = (tabla[6].replace(tabla[6], tabla[6]));
                tabla[7] = (tabla[7].replace(tabla[7], tabla[7]));
                tabla[8] = (tabla[8].replace(tabla[8], tabla[8]));
                tabla[9] = (tabla[9].replace(tabla[9], tabla[9]));
                bw.write(tabla[0] + ';' + tabla[1] + ';' + tabla[2] + ';'
                        + tabla[3] + ';' + tabla[4] + ';' + tabla[5] + ';'
                        + tabla[6] + ';' + tabla[7] + ';' + tabla[8] + ';'
                        + tabla[9] + ";" + i + "\n");
                i++;
            }
            bw.flush();
            bw.close();
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
        ficheroRecepcionPaquetes.delete();
        fichero_temporal.renameTo(ficheroRecepcionPaquetes);
        return " ";
    }

    private void btnSalirMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirMenuActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirMenuActionPerformed

    private void btnFicheroMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFicheroMenuActionPerformed
        toExcel();
    }//GEN-LAST:event_btnFicheroMenuActionPerformed

    private void btnLimpiarDatosMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarDatosMenuActionPerformed
        LimpiarCasillas();
    }//GEN-LAST:event_btnLimpiarDatosMenuActionPerformed

    private void btnActualizarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarMenuActionPerformed
        MostrarTabla();
        LimpiarCasillas();
        NumPersonas();
        datos();
    }//GEN-LAST:event_btnActualizarMenuActionPerformed

    private void tablaRecepcionPaquetesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaRecepcionPaquetesMouseClicked
        Seleccionar();
    }//GEN-LAST:event_tablaRecepcionPaquetesMouseClicked

    private void btnGuardarModificacion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarModificacion1ActionPerformed
        GuardarModificaciones();
        MostrarTabla();
        LimpiarCasillas();
        datos();
    }//GEN-LAST:event_btnGuardarModificacion1ActionPerformed

    private void btnModificarId1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarId1ActionPerformed
        EntradaMultiple();
    }//GEN-LAST:event_btnModificarId1ActionPerformed

    private void btnBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.tablaRecepcionPaquetes.getModel();
        model.setRowCount(0);
        model.setRowCount(0);
        Buscar();
        LimpiarCasillas();
        datos();
    }//GEN-LAST:event_btnBuscar1ActionPerformed

    private void btnGuardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar1ActionPerformed
        GuardarNuevoId();
    }//GEN-LAST:event_btnGuardar1ActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (!txtMesAno.getText().equals("") || !txtFecha.getText().equals("")
                || !txtHoraRecepcion.getText().equals("") || !txtNombreTransportista.getText().equals("")
                || !txtRemitente.getText().equals("") || !txtNumeroPaquetes.getText().equals("")
                || !txtDestinatario.getText().equals("") || !txtEntregadoA.getText().equals("")
                || !txtNotas.getText().equals("") || !txtId.getText().equals("")) {
            eliminarFila();
            LimpiarCasillas();
            modificarFileEntrada();
            MostrarTabla();
            datos();
        } else {
            JOptionPane.showMessageDialog(null, "No hay datos seleccionados");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NumPersonas;
    private javax.swing.JMenuItem btnActualizarMenu;
    private javax.swing.JButton btnBuscar1;
    private javax.swing.JMenuItem btnEliminar;
    private javax.swing.JMenuItem btnFicheroMenu;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JButton btnGuardarModificacion1;
    private javax.swing.JMenuItem btnLimpiarDatosMenu;
    private javax.swing.JButton btnModificarId1;
    private javax.swing.JMenuItem btnSalirMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaRecepcionPaquetes;
    private javax.swing.JTextField txtAgenciaTransporte;
    private javax.swing.JTextField txtDestinatario;
    private javax.swing.JTextField txtEntregadoA;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtHoraRecepcion;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMesAno;
    private javax.swing.JTextField txtNombreTransportista;
    private javax.swing.JTextField txtNotas;
    private javax.swing.JTextField txtNumeroPaquetes;
    private javax.swing.JTextField txtRemitente;
    // End of variables declaration//GEN-END:variables
}
