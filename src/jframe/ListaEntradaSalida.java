package jframe;

import jframe.menuPrincipal.MiRenderer;
import jframe.menuPrincipal.date;
import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Gustavo
 */
public final class ListaEntradaSalida extends javax.swing.JFrame {

    date date = new date();
    String user = System.getProperty("user.name");
    File fichero = new File("C:\\Users\\" + user + "\\Documents\\NetBeansProjects\\JFrame\\src\\file\\entrada.csv");
    File fichero_temporal = new File("C:\\Users\\" + user + "\\Documents\\NetBeansProjects\\JFrame\\src\\file\\temporal.csv");
    File ficheroEntradaSalida = new File("C:\\Users\\" + user + "\\Desktop\\Fichero_Entrada_Salida.csv");

    /**
     * Creates new form ListaEntradaSalida
     */
    public ListaEntradaSalida() {
        MiRenderer m = new MiRenderer();
        initComponents();
        ficheroApp();
        this.setTitle("Registros Control Usuarios");
        this.setLocationRelativeTo(ListaEntradaSalida.this);
        setIconImage(new ImageIcon(getClass().getResource("/img/IconoJFrame.png")).getImage());
        this.getContentPane().setBackground(new Color(243, 233, 147));
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        modificarFileEntrada();
        ListaEntradaSalidaEmpresa();
        NumPersonas();
        TablaListaEntradaSalida.getTableHeader().setFont(new Font("Courier New", 1, 18));
        TablaListaEntradaSalida.getTableHeader().setBackground(Color.blue);
        TablaListaEntradaSalida.getTableHeader().setForeground(Color.white);
        TablaListaEntradaSalida.getTableHeader().setPreferredSize(new java.awt.Dimension(50, 50));
        TablaListaEntradaSalida.setRowHeight(30);
        TablaListaEntradaSalida.setRowMargin(10);

        for (int i = 0; i < TablaListaEntradaSalida.getColumnCount(); i++) {
            TablaListaEntradaSalida.getColumnModel().getColumn(i).setCellRenderer(m);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaListaEntradaSalida = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        NumPersonas = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtNotas = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtRejilla = new javax.swing.JTextField();
        txtDni = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtGafas = new javax.swing.JTextField();
        txtCasco = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        txtMatriculaRemolque = new javax.swing.JTextField();
        txtMatricula = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtAutoriza = new javax.swing.JTextField();
        txtEmpresa = new javax.swing.JTextField();
        txtTotalHora = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        txtSalidaHora = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtEntradaHora = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTrabajoRealizar = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNumeroVisita = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCodigoTarjeta = new javax.swing.JTextField();
        txtSituacion = new javax.swing.JTextField();
        txtMesAno = new javax.swing.JTextField();
        btnGuardarModificacion1 = new javax.swing.JButton();
        btnBuscar1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnActualizarMenu = new javax.swing.JMenuItem();
        btnEliminar = new javax.swing.JMenuItem();
        btnLimpiarDatosMenu = new javax.swing.JMenuItem();
        btnFicheroMenu = new javax.swing.JMenuItem();
        btnSalirMenu = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenu5.setText("jMenu5");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(243, 233, 147));

        TablaListaEntradaSalida.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TablaListaEntradaSalida.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        TablaListaEntradaSalida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mes-Año", "Fecha", "Situacion", "Empresa", "Nombre", "Apellido", "Dni", "Codigo Tarjeta", "Numero Visita", "Trabajo a  Realizar", "Entrada", "Salida", "Total", "Autoriza", "Matricula", "Matricula Remolque", "Casco", "Gafas", "Rejilla", "Notas", "Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaListaEntradaSalida.setSelectionBackground(new java.awt.Color(153, 204, 255));
        TablaListaEntradaSalida.getTableHeader().setReorderingAllowed(false);
        TablaListaEntradaSalida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaListaEntradaSalidaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaListaEntradaSalida);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Courier New", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Registros");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 255));
        jLabel8.setText("Personas dentro de Planta:");
        jLabel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        NumPersonas.setEditable(false);
        NumPersonas.setBackground(new java.awt.Color(255, 255, 255));
        NumPersonas.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        NumPersonas.setForeground(new java.awt.Color(204, 0, 0));
        NumPersonas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NumPersonas.setBorder(null);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo.png"))); // NOI18N
        jLabel13.setAutoscrolls(true);
        jLabel13.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel2.setBackground(new java.awt.Color(204, 153, 0));

        jLabel28.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel28.setText("Salida:");

        jLabel27.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel27.setText("Entrada:");

        txtId.setEditable(false);
        txtId.setBackground(new java.awt.Color(255, 255, 255));
        txtId.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtId.setBorder(null);

        jLabel36.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel36.setText("Id:");

        jLabel35.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel35.setText("Notas:");

        jLabel30.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel30.setText("Autoriza:");

        jLabel25.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel25.setText("Número Visita:");

        txtNotas.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtNotas.setBorder(null);

        jLabel11.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel11.setText("Código Tarjeta:");

        txtRejilla.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtRejilla.setBorder(null);

        txtDni.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtDni.setBorder(null);

        jLabel34.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel34.setText("Rejilla:");

        jLabel29.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel29.setText("Total:");

        jLabel33.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel33.setText("Gafas:");

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel3.setText("DNI - NIF: ");

        txtGafas.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtGafas.setBorder(null);

        txtCasco.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtCasco.setBorder(null);

        jLabel32.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel32.setText("Casco:");

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel2.setText("Mes-Año (mm/yy):");

        jLabel26.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel26.setText("Trabajo:");

        jLabel10.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel10.setText("Situación:");

        jLabel31.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel31.setText("Matricula Remolque:");

        txtMatriculaRemolque.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtMatriculaRemolque.setBorder(null);

        txtMatricula.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtMatricula.setBorder(null);

        txtApellido.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtApellido.setBorder(null);

        jLabel12.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel12.setText("Matrícula:");

        txtNombre.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtNombre.setBorder(null);

        txtAutoriza.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtAutoriza.setBorder(null);

        txtEmpresa.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtEmpresa.setBorder(null);

        txtTotalHora.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtTotalHora.setBorder(null);

        txtFecha.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtFecha.setBorder(null);

        txtSalidaHora.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtSalidaHora.setBorder(null);

        jLabel7.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel7.setText("Apellido:");

        txtEntradaHora.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtEntradaHora.setBorder(null);

        jLabel6.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel6.setText("Nombre:");

        txtTrabajoRealizar.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtTrabajoRealizar.setBorder(null);

        jLabel5.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel5.setText("Empresa:");

        txtNumeroVisita.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtNumeroVisita.setBorder(null);

        jLabel4.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel4.setText("Fecha (dd/mm/yy):");

        txtCodigoTarjeta.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtCodigoTarjeta.setBorder(null);

        txtSituacion.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtSituacion.setBorder(null);

        txtMesAno.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtMesAno.setBorder(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtApellido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFecha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMesAno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSituacion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtEntradaHora)
                    .addComponent(txtNumeroVisita, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTrabajoRealizar, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodigoTarjeta, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDni, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTotalHora, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSalidaHora, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtNotas, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRejilla, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMatricula, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMatriculaRemolque, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCasco, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtGafas)
                    .addComponent(txtAutoriza, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMesAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCodigoTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25)
                            .addComponent(txtNumeroVisita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSituacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTrabajoRealizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27)
                            .addComponent(txtEntradaHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28)
                            .addComponent(jLabel6)
                            .addComponent(txtSalidaHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtTotalHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtAutoriza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(txtMatriculaRemolque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCasco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(txtGafas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRejilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)))
                .addContainerGap())
        );

        btnGuardarModificacion1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnGuardarModificacion1.setForeground(new java.awt.Color(0, 0, 255));
        btnGuardarModificacion1.setMnemonic('r');
        btnGuardarModificacion1.setText("Guardar");
        btnGuardarModificacion1.setToolTipText("<html>Guardar modificación.<br/>Tambien puede usar Alt + r</html>");
        btnGuardarModificacion1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGuardarModificacion1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardarModificacion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarModificacion1ActionPerformed(evt);
            }
        });

        btnBuscar1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnBuscar1.setForeground(new java.awt.Color(0, 0, 255));
        btnBuscar1.setMnemonic('b');
        btnBuscar1.setText("Buscar");
        btnBuscar1.setToolTipText("<html>______________________________________<br/><br/>Modelo de búsquedas<br/>______________________________________<br/>- Situación (Dentro o Fuera)<br/>- Mes-Año (mm/yy) - Empresa<br/>- Mes-Año (mm/yy)  - Nombre - Apellido<br/>- Fecha (dd/mm/yy) - Empresa<br/>- Fecha (dd/mm/yy) - Nombre - Apellido<br/>Tambien puede usar Alt + b<br/></html>");
        btnBuscar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBuscar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(NumPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnBuscar1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnGuardarModificacion1)))
                        .addGap(0, 80, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(NumPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar1)
                    .addComponent(btnGuardarModificacion1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuBar1.setBorder(null);
        jMenuBar1.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N

        jMenu1.setBorder(null);
        jMenu1.setForeground(new java.awt.Color(0, 0, 255));
        jMenu1.setMnemonic('m');
        jMenu1.setText("Menú");
        jMenu1.setToolTipText("<html>Menú principal<br/>registros.<br/>Tambien se puede usar Alt + m</html>");
        jMenu1.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N

        btnActualizarMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnActualizarMenu.setForeground(new java.awt.Color(0, 0, 255));
        btnActualizarMenu.setText("Actualizar");
        btnActualizarMenu.setBorder(null);
        btnActualizarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarMenuActionPerformed(evt);
            }
        });
        jMenu1.add(btnActualizarMenu);

        btnEliminar.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 0, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.setBorder(null);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jMenu1.add(btnEliminar);

        btnLimpiarDatosMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnLimpiarDatosMenu.setForeground(new java.awt.Color(0, 0, 255));
        btnLimpiarDatosMenu.setText("Limpiar");
        btnLimpiarDatosMenu.setBorder(null);
        btnLimpiarDatosMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarDatosMenuActionPerformed(evt);
            }
        });
        jMenu1.add(btnLimpiarDatosMenu);

        btnFicheroMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnFicheroMenu.setForeground(new java.awt.Color(0, 0, 255));
        btnFicheroMenu.setText("Crear Fichero");
        btnFicheroMenu.setBorder(null);
        btnFicheroMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFicheroMenuActionPerformed(evt);
            }
        });
        jMenu1.add(btnFicheroMenu);

        btnSalirMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnSalirMenu.setForeground(new java.awt.Color(255, 0, 0));
        btnSalirMenu.setMnemonic('s');
        btnSalirMenu.setText("Salir");
        btnSalirMenu.setToolTipText("<html>Pulsar para salir<br/>Tambien se puede usar Alt + s<br/>y a continuación entrer</html>");
        btnSalirMenu.setBorder(null);
        btnSalirMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirMenuActionPerformed(evt);
            }
        });
        jMenu1.add(btnSalirMenu);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void ficheroApp() {
        if (!fichero.exists()) {
            JOptionPane.showMessageDialog(null, "\nHay un error en los fichero\nhable con el administrador.");
        }
    }

    public void NumPersonas() {
        String line;
        int i = 0;
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(fichero));
            while ((line = br.readLine()) != null) {
                String[] numPersonas = line.split(";");
                if (numPersonas[2].equals("DENTRO")) {
                    i++;
                    String numPersonasString = String.valueOf(i);
                    NumPersonas.setText(numPersonasString);
                } else {
                    String SinPersonasString = String.valueOf(i);
                    NumPersonas.setText(SinPersonasString);
                }
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void Seleccionar() {
        if (TablaListaEntradaSalida.getSelectedRowCount() > 0) {
            txtMesAno.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 0).toString());
            txtFecha.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 1).toString());
            txtSituacion.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 2).toString());
            txtEmpresa.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 3).toString());
            txtNombre.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 4).toString());
            txtApellido.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 5).toString());
            txtDni.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 6).toString());
            txtCodigoTarjeta.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 7).toString());
            txtNumeroVisita.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 8).toString());
            txtTrabajoRealizar.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 9).toString());
            txtEntradaHora.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 10).toString());
            txtSalidaHora.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 11).toString());
            txtTotalHora.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 12).toString());
            txtAutoriza.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 13).toString());
            txtMatricula.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 14).toString());
            txtMatriculaRemolque.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 15).toString());
            txtCasco.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 16).toString());
            txtGafas.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 17).toString());
            txtRejilla.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 18).toString());
            txtNotas.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 19).toString());
            txtId.setText(TablaListaEntradaSalida.getValueAt(TablaListaEntradaSalida.getSelectedRow(), 20).toString());
        }
    }

    public void GuardarModificaciones() {
        int i = 0;
        try {
            String line;
            String mes_ano = txtMesAno.getText();
            String fecha = txtFecha.getText();
            String situacion = txtSituacion.getText();
            String empresa = txtEmpresa.getText();
            String nombre = txtNombre.getText();
            String apellido = txtApellido.getText();
            String dni = txtDni.getText();
            String cod_tar = txtCodigoTarjeta.getText();
            String num_tar = txtNumeroVisita.getText();
            String trabajo = txtTrabajoRealizar.getText();
            String hora_entrada = txtEntradaHora.getText();
            String hora_salida = txtSalidaHora.getText();
            String total_hora = txtTotalHora.getText();
            String autoriza = txtAutoriza.getText();
            String matricula = txtMatricula.getText();
            String matricula_remolque = txtMatriculaRemolque.getText();
            String casco = txtCasco.getText();
            String gafas = txtGafas.getText();
            String rejilla = txtRejilla.getText();
            String notas = txtNotas.getText();
            String id = txtId.getText();
            BufferedReader br = null;
            BufferedWriter bw = null;
            br = new BufferedReader(new FileReader(fichero));
            bw = new BufferedWriter(new FileWriter(fichero_temporal));

            while ((line = br.readLine()) != null) {
                String[] busqueda = line.split(";");
                if (busqueda[20].equals(id)) {
                    i++;
                    busqueda[0] = (busqueda[0].replace(busqueda[0], mes_ano));
                    busqueda[1] = (busqueda[1].replace(busqueda[1], fecha));
                    busqueda[2] = (busqueda[2].replace(busqueda[2], situacion));
                    busqueda[3] = (busqueda[3].replace(busqueda[3], empresa));
                    busqueda[4] = (busqueda[4].replace(busqueda[4], nombre));
                    busqueda[5] = (busqueda[5].replace(busqueda[5], apellido));
                    busqueda[6] = (busqueda[6].replace(busqueda[6], dni));
                    busqueda[7] = (busqueda[7].replace(busqueda[7], cod_tar));
                    busqueda[8] = (busqueda[8].replace(busqueda[8], num_tar));
                    busqueda[9] = (busqueda[9].replace(busqueda[9], trabajo));
                    busqueda[10] = (busqueda[10].replace(busqueda[10], hora_entrada));
                    busqueda[11] = (busqueda[11].replace(busqueda[11], hora_salida));
                    busqueda[12] = (busqueda[12].replace(busqueda[12], total_hora));
                    busqueda[13] = (busqueda[13].replace(busqueda[13], autoriza));
                    busqueda[14] = (busqueda[14].replace(busqueda[14], matricula));
                    busqueda[15] = (busqueda[15].replace(busqueda[15], matricula_remolque));
                    busqueda[16] = (busqueda[16].replace(busqueda[16], casco));
                    busqueda[17] = (busqueda[17].replace(busqueda[17], gafas));
                    busqueda[18] = (busqueda[18].replace(busqueda[18], rejilla));
                    busqueda[19] = (busqueda[19].replace(busqueda[19], notas));
                    busqueda[20] = (busqueda[20].replace(busqueda[20], id));

                    //SALIDA
                    String sCadena = busqueda[10];
                    String sSubCadena = sCadena.substring(0, 2);
                    String sSubCadena1 = sCadena.substring(3, 5);
                    int horasEntrada = Integer.parseInt(sSubCadena);
                    int minEntrada = Integer.parseInt(sSubCadena1);
                    int horas_entrada = horasEntrada;
                    int min_entrada = minEntrada;

                    //ENTRADA
                    String sCadena2 = busqueda[11];
                    String sSubCadena3 = sCadena2.substring(0, 2);
                    String sSubCadena4 = sCadena2.substring(3, 5);
                    int horasSalida = Integer.parseInt(sSubCadena3);
                    int minSalida = Integer.parseInt(sSubCadena4);
                    int horas_salida = horasSalida;
                    int min_salida = minSalida;

                    //CALCULOS
                    if (horas_entrada == horas_salida && min_entrada <= min_salida) {

                        int total_horas = (horas_entrada - horas_salida);
                        int total_min = (min_salida - min_entrada);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada > horas_salida && min_entrada > min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_min_entrada = (60 - min_entrada);
                        int total_horas = (horas_salida + total_horas_entrada - 1);
                        int total_min = (total_min_entrada + min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada > horas_salida && min_entrada == min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas = (total_horas_entrada + horas_salida);
                        int total_min = (min_entrada - min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada > horas_salida && min_entrada < min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas = (total_horas_entrada + horas_salida);
                        int total_min_salida = (60 - min_salida);
                        int total_min_entrada = (60 - min_entrada);
                        int total_min = (total_min_entrada - total_min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada < horas_salida && min_entrada == min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas_salida = (24 - horas_salida);
                        int total_horas = (total_horas_entrada - total_horas_salida);
                        int total_min = (min_entrada - min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada < horas_salida && min_entrada < min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas_salida = (24 - horas_salida);
                        int total_horas = (total_horas_entrada - total_horas_salida);
                        int total_min_salida = (60 - min_salida);
                        int total_min_entrada = (60 - min_entrada);
                        int total_min = (total_min_entrada - total_min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                    if (horas_entrada < horas_salida && min_entrada > min_salida) {

                        int total_horas_entrada = (24 - horas_entrada);
                        int total_horas_salida = (24 - horas_salida);
                        int total_horas = (total_horas_entrada - total_horas_salida - 1);
                        int total_min_entrada = (60 - min_entrada);
                        int total_min = (total_min_entrada + min_salida);

                        int hr = total_horas;
                        int mn = total_min;
                        String sr = (hr + ":" + mn);

                        busqueda[12] = (busqueda[12].replace(busqueda[12], sr));
                    }
                }
                bw.write(busqueda[0] + ';' + busqueda[1] + ';' + busqueda[2] + ';' + busqueda[3] + ';' + busqueda[4] + ';'
                        + busqueda[5] + ';' + busqueda[6] + ';' + busqueda[7] + ';' + busqueda[8] + ';' + busqueda[9] + ';'
                        + busqueda[10] + ';' + busqueda[11] + ';' + busqueda[12] + ';' + busqueda[13] + ';' + busqueda[14] + ';'
                        + busqueda[15] + ';' + busqueda[16] + ';' + busqueda[17] + ';'
                        + busqueda[18] + ';' + busqueda[19] + ';' + busqueda[20] + "\n");
            }
            bw.flush();
            br.close();
            bw.close();
            if (i == 0) {
                JOptionPane.showMessageDialog(null, "\nNO SE ENCONTRARON DATOS RELACIONADOS A LA BÚSQUEDA  ");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, date.fecha() + "\nError: " + e);
        }
        fichero.delete();
        fichero_temporal.renameTo(fichero);
    }

    public void LimpiarCasillas() {
        txtSituacion.setText(null);
        txtNombre.setText(null);
        txtMesAno.setText(null);
        txtFecha.setText(null);
        txtEmpresa.setText(null);
        txtApellido.setText(null);
        txtDni.setText(null);
        txtCodigoTarjeta.setText(null);
        txtNumeroVisita.setText(null);
        txtTrabajoRealizar.setText(null);
        txtEntradaHora.setText(null);
        txtSalidaHora.setText(null);
        txtTotalHora.setText(null);
        txtAutoriza.setText(null);
        txtMatricula.setText(null);
        txtMatriculaRemolque.setText(null);
        txtCasco.setText(null);
        txtGafas.setText(null);
        txtRejilla.setText(null);
        txtNotas.setText(null);
        txtId.setText(null);
    }

    public void Buscar() {
        String line;
        try {
            BufferedReader br = null;
            br = new BufferedReader(new FileReader(fichero));
            while ((line = br.readLine()) != null) {
                String[] cod_tar = line.split(";");
                if ((txtFecha.getText().equalsIgnoreCase(cod_tar[1]) && txtNombre.getText().equalsIgnoreCase(cod_tar[4])
                        && txtApellido.getText().equalsIgnoreCase(cod_tar[5]))
                        || (txtSituacion.getText().equalsIgnoreCase(cod_tar[2]))
                        || (txtFecha.getText().equalsIgnoreCase(cod_tar[1]) && txtEmpresa.getText().equalsIgnoreCase(cod_tar[3]))
                        || (txtMesAno.getText().equalsIgnoreCase(cod_tar[0]) && txtNombre.getText().equalsIgnoreCase(cod_tar[4])
                        && txtApellido.getText().equalsIgnoreCase(cod_tar[5]))
                        || (txtMesAno.getText().equalsIgnoreCase(cod_tar[0]) && txtEmpresa.getText().equalsIgnoreCase(cod_tar[3]))) {
                    DefaultTableModel model = (DefaultTableModel) TablaListaEntradaSalida.getModel();
                    TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<>(model);
                    TablaListaEntradaSalida.setRowSorter(elQueOrdena);
                    Vector row = new Vector();
                    row.add(cod_tar[0]);
                    row.add(cod_tar[1]);
                    row.add(cod_tar[2]);
                    row.add(cod_tar[3]);
                    row.add(cod_tar[4]);
                    row.add(cod_tar[5]);
                    row.add(cod_tar[6]);
                    row.add(cod_tar[7]);
                    row.add(cod_tar[8]);
                    row.add(cod_tar[9]);
                    row.add(cod_tar[10]);
                    row.add(cod_tar[11]);
                    row.add(cod_tar[12]);
                    row.add(cod_tar[13]);
                    row.add(cod_tar[14]);
                    row.add(cod_tar[15]);
                    row.add(cod_tar[16]);
                    row.add(cod_tar[17]);
                    row.add(cod_tar[18]);
                    row.add(cod_tar[19]);
                    row.add(cod_tar[20]);
                    model.addRow(row);
                }
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void ListaEntradaSalidaEmpresa() {
        String line;
        try {
            BufferedReader br = null;
            br = new BufferedReader(new FileReader(fichero));
            while ((line = br.readLine()) != null) {
                String[] cod_tar = line.split(";");
                DefaultTableModel model = (DefaultTableModel) TablaListaEntradaSalida.getModel();
                TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(model);
                TablaListaEntradaSalida.setRowSorter(elQueOrdena);
                Vector row = new Vector();
                row.add(cod_tar[0]);
                row.add(cod_tar[1]);
                row.add(cod_tar[2]);
                row.add(cod_tar[3]);
                row.add(cod_tar[4]);
                row.add(cod_tar[5]);
                row.add(cod_tar[6]);
                row.add(cod_tar[7]);
                row.add(cod_tar[8]);
                row.add(cod_tar[9]);
                row.add(cod_tar[10]);
                row.add(cod_tar[11]);
                row.add(cod_tar[12]);
                row.add(cod_tar[13]);
                row.add(cod_tar[14]);
                row.add(cod_tar[15]);
                row.add(cod_tar[16]);
                row.add(cod_tar[17]);
                row.add(cod_tar[18]);
                row.add(cod_tar[19]);
                row.add(cod_tar[20]);
                model.addRow(row);
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void toExcel() {
        BufferedWriter bw = null;
        DefaultTableModel model = (DefaultTableModel) TablaListaEntradaSalida.getModel();
        try {
            bw = new BufferedWriter(new FileWriter(ficheroEntradaSalida));
            for (int i = 0; i < model.getColumnCount(); i++) {
                bw.write(model.getColumnName(i) + "\t");
            }
            bw.write("\n");
            for (int i = 0; i < model.getRowCount(); i++) {
                for (int j = 0; j < model.getColumnCount(); j++) {
                    bw.write(model.getValueAt(i, j).toString() + "\t");
                }
                bw.write("\n");
            }
            bw.close();
            JOptionPane.showMessageDialog(null, "\nEl fichero se ha creado correctamente.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void eliminarFila() {
        String line;
        BufferedReader br = null;
        BufferedWriter bw = null;
        ArrayList<String> al = new ArrayList<>();
        try {
            br = new BufferedReader(new FileReader(fichero));
            bw = new BufferedWriter(new FileWriter(fichero_temporal));
            while ((line = br.readLine()) != null) {
                String[] tabla = line.split(";");
                al.add(tabla[0] + ';' + tabla[1] + ';' + tabla[2]
                        + ';' + tabla[3] + ';' + tabla[4] + ';' + tabla[5] + ';' + tabla[6]
                        + ';' + tabla[7] + ';' + tabla[8] + ";" + tabla[9]
                        + ';' + tabla[10] + ';' + tabla[11] + ';' + tabla[12]
                        + ';' + tabla[13] + ';' + tabla[14] + ';' + tabla[15]
                        + ";" + tabla[16] + ';' + tabla[17] + ';' + tabla[18]
                        + ';' + tabla[19] + ';' + tabla[20] + "\n");
            }
            int i = Integer.parseInt(txtId.getText());
            int confirmado = JOptionPane.showOptionDialog(null,
                    "¿Esta seguro de eliminar los datos?",
                    "Eliminar datos",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null, new Object[]{"Si", "No"}, "No");
            switch (confirmado) {
                case JOptionPane.OK_OPTION:
                    al.remove(i);
                    JOptionPane.showMessageDialog(null, "Datos eliminados correctamente");
                    br.close();
                    break;
                case JOptionPane.NO_OPTION:
                    JOptionPane.showMessageDialog(null, "No se borrarán los datos");
                    br.close();
                    break;
                default:
                    br.close();
                    break;
            }
            for (String prueba : al) {
                bw.write(prueba);
            }
            bw.flush();
            br.close();
            bw.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
        fichero.delete();
        fichero_temporal.renameTo(fichero);
    }

    public String modificarFileEntrada() {
        BufferedReader br = null;
        BufferedWriter bw = null;
        String line;
        int i = 0;
        try {
            br = new BufferedReader(new FileReader(fichero));
            bw = new BufferedWriter(new FileWriter(fichero_temporal));
            while ((line = br.readLine()) != null) {
                String[] tabla = line.split(";");
                tabla[0] = (tabla[0].replace(tabla[0], tabla[0]));
                tabla[1] = (tabla[1].replace(tabla[1], tabla[1]));
                tabla[2] = (tabla[2].replace(tabla[2], tabla[2]));
                tabla[3] = (tabla[3].replace(tabla[3], tabla[3]));
                tabla[4] = (tabla[4].replace(tabla[4], tabla[4]));
                tabla[5] = (tabla[5].replace(tabla[5], tabla[5]));
                tabla[6] = (tabla[6].replace(tabla[6], tabla[6]));
                tabla[7] = (tabla[7].replace(tabla[7], tabla[7]));
                tabla[8] = (tabla[8].replace(tabla[8], tabla[8]));
                tabla[9] = (tabla[9].replace(tabla[9], tabla[9]));
                tabla[10] = (tabla[10].replace(tabla[10], tabla[10]));
                tabla[11] = (tabla[11].replace(tabla[11], tabla[11]));
                tabla[12] = (tabla[12].replace(tabla[12], tabla[12]));
                tabla[13] = (tabla[13].replace(tabla[13], tabla[13]));
                tabla[14] = (tabla[14].replace(tabla[14], tabla[14]));
                tabla[15] = (tabla[15].replace(tabla[15], tabla[15]));
                tabla[16] = (tabla[16].replace(tabla[16], tabla[16]));
                tabla[17] = (tabla[17].replace(tabla[17], tabla[17]));
                tabla[18] = (tabla[18].replace(tabla[18], tabla[18]));
                tabla[19] = (tabla[19].replace(tabla[19], tabla[19]));
                bw.write(tabla[0] + ';' + tabla[1] + ';' + tabla[2]
                        + ';' + tabla[3] + ';' + tabla[4] + ';' + tabla[5] + ';' + tabla[6]
                        + ';' + tabla[7] + ';' + tabla[8] + ";" + tabla[9]
                        + ';' + tabla[10] + ';' + tabla[11] + ';' + tabla[12]
                        + ';' + tabla[13] + ';' + tabla[14] + ';' + tabla[15]
                        + ";" + tabla[16] + ';' + tabla[17] + ';' + tabla[18]
                        + ';' + tabla[19] + ';' + i + "\n");
                i++;
            }
            bw.flush();
            bw.close();
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
        fichero.delete();
        fichero_temporal.renameTo(fichero);
        return " ";
    }

    private void btnSalirMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirMenuActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirMenuActionPerformed

    private void btnFicheroMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFicheroMenuActionPerformed
        toExcel();
    }//GEN-LAST:event_btnFicheroMenuActionPerformed

    private void btnLimpiarDatosMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarDatosMenuActionPerformed
        LimpiarCasillas();
    }//GEN-LAST:event_btnLimpiarDatosMenuActionPerformed

    private void btnActualizarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarMenuActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.TablaListaEntradaSalida.getModel();
        model.setRowCount(0);
        model.setRowCount(0);
        NumPersonas();
        LimpiarCasillas();
        ListaEntradaSalidaEmpresa();
    }//GEN-LAST:event_btnActualizarMenuActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (!txtId.getText().equals("") || !txtMesAno.getText().equals("")
                || !txtFecha.getText().equals("") || !txtSituacion.getText().equals("")
                || !txtEmpresa.getText().equals("") || !txtNombre.getText().equals("")
                || !txtApellido.getText().equals("") || !txtDni.getText().equals("")
                || !txtCodigoTarjeta.getText().equals("") || !txtNumeroVisita.getText().equals("")
                || !txtTrabajoRealizar.getText().equals("") || !txtEntradaHora.getText().equals("")
                || !txtSalidaHora.getText().equals("") || !txtTotalHora.getText().equals("")
                || !txtAutoriza.getText().equals("") || !txtMatricula.getText().equals("")
                || !txtMatriculaRemolque.getText().equals("") || !txtCasco.getText().equals("")
                || !txtGafas.getText().equals("") || !txtRejilla.getText().equals("")
                || !txtNotas.getText().equals("")) {
            eliminarFila();
            LimpiarCasillas();
            modificarFileEntrada();
            DefaultTableModel model = (DefaultTableModel) this.TablaListaEntradaSalida.getModel();
            model.setRowCount(0);
            model.setRowCount(0);
            ListaEntradaSalidaEmpresa();
        } else {
            JOptionPane.showMessageDialog(null, "No hay datos seleccionados");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.TablaListaEntradaSalida.getModel();
        model.setRowCount(0);
        model.setRowCount(0);
        Buscar();
        LimpiarCasillas();
    }//GEN-LAST:event_btnBuscar1ActionPerformed

    private void btnGuardarModificacion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarModificacion1ActionPerformed
        GuardarModificaciones();
        DefaultTableModel model = (DefaultTableModel) this.TablaListaEntradaSalida.getModel();
        model.setRowCount(0);
        model.setRowCount(0);
        ListaEntradaSalidaEmpresa();
        LimpiarCasillas();
    }//GEN-LAST:event_btnGuardarModificacion1ActionPerformed

    private void TablaListaEntradaSalidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaListaEntradaSalidaMouseClicked
        Seleccionar();
    }//GEN-LAST:event_TablaListaEntradaSalidaMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NumPersonas;
    private javax.swing.JTable TablaListaEntradaSalida;
    private javax.swing.JMenuItem btnActualizarMenu;
    private javax.swing.JButton btnBuscar1;
    private javax.swing.JMenuItem btnEliminar;
    private javax.swing.JMenuItem btnFicheroMenu;
    private javax.swing.JButton btnGuardarModificacion1;
    private javax.swing.JMenuItem btnLimpiarDatosMenu;
    private javax.swing.JMenuItem btnSalirMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtAutoriza;
    private javax.swing.JTextField txtCasco;
    private javax.swing.JTextField txtCodigoTarjeta;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtEntradaHora;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtGafas;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtMatriculaRemolque;
    private javax.swing.JTextField txtMesAno;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNotas;
    private javax.swing.JTextField txtNumeroVisita;
    private javax.swing.JTextField txtRejilla;
    private javax.swing.JTextField txtSalidaHora;
    private javax.swing.JTextField txtSituacion;
    private javax.swing.JTextField txtTotalHora;
    private javax.swing.JTextField txtTrabajoRealizar;
    // End of variables declaration//GEN-END:variables
}
