package jframe;

import jframe.menuPrincipal.MiRenderer;
import jframe.menuPrincipal.date;
import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Gustavo_Senorans
 */
public final class ListadoTelefonico extends javax.swing.JFrame {

    date date = new date();
    String user = System.getProperty("user.name");
    File fichero2 = new File("C:\\Users\\" + user + "\\Documents\\NetBeansProjects\\JFrame\\src\\file\\entrada.csv");
    File fichero = new File("C:\\Users\\" + user + "\\Documents\\NetBeansProjects\\JFrame\\src\\file\\lista_telf.csv");
    File fichero_temporal = new File("C:\\Users\\" + user + "\\Documents\\NetBeansProjects\\JFrame\\src\\file\\temporal.csv");
    File ficheroListaTelefono = new File("C:\\Users\\" + user + "\\Desktop\\Fichero_Lista_Telefono.csv");

    /**
     * Creates new form ListadoTelefonico
     */
    public void ficheroApp() {
        if (!fichero.exists()) {
            JOptionPane.showMessageDialog(null, "\nHay un error en los fichero\nhable con el administrador.");
        }
    }

    public ListadoTelefonico() {
        initComponents();
        ficheroApp();
        this.setTitle("Lista de Teléfonos");
        this.setLocationRelativeTo(ListadoTelefonico.this);
        setIconImage(new ImageIcon(getClass().getResource("/img/IconoJFrame.png")).getImage());
        this.getContentPane().setBackground(new Color(243, 233, 147));
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setResizable(true);
        modificarFileEntrada();
        MostrarTabla();
        NumPersonas();
        datos();
        tablaListaTelefono.getTableHeader().setFont(new Font("Courier New", 1, 18));
        tablaListaTelefono.getTableHeader().setBackground(Color.blue);
        tablaListaTelefono.getTableHeader().setForeground(Color.white);
        tablaListaTelefono.getTableHeader().setPreferredSize(new java.awt.Dimension(50, 50));
        tablaListaTelefono.setRowHeight(30);
        tablaListaTelefono.setRowMargin(10);
        MiRenderer m = new MiRenderer();
        for (int i = 0; i < tablaListaTelefono.getColumnCount(); i++) {
            tablaListaTelefono.getColumnModel().getColumn(i).setCellRenderer(m);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu4 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        NumPersonas = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtDepartamento = new javax.swing.JTextField();
        txtNumMovil = new javax.swing.JTextField();
        txtExtension = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaListaTelefono = new javax.swing.JTable();
        btnGuardar1 = new javax.swing.JButton();
        btnBuscar1 = new javax.swing.JButton();
        btnGuardarModificacion1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnActualizarMenu = new javax.swing.JMenuItem();
        btnEliminar = new javax.swing.JMenuItem();
        btnFicheroMenu = new javax.swing.JMenuItem();
        btnSalirMenu = new javax.swing.JMenuItem();

        jMenu4.setText("jMenu4");

        jMenu7.setText("jMenu7");

        jMenu8.setText("jMenu8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(243, 233, 147));

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Lista de Teléfonos");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 255));
        jLabel8.setText("Personas dentro de Planta:");
        jLabel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        NumPersonas.setEditable(false);
        NumPersonas.setBackground(new java.awt.Color(255, 255, 255));
        NumPersonas.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        NumPersonas.setForeground(new java.awt.Color(204, 0, 0));
        NumPersonas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NumPersonas.setBorder(null);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo.png"))); // NOI18N
        jLabel13.setAutoscrolls(true);
        jLabel13.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel2.setBackground(new java.awt.Color(204, 153, 0));

        txtDepartamento.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtDepartamento.setBorder(null);

        txtNumMovil.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtNumMovil.setBorder(null);

        txtExtension.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtExtension.setBorder(null);

        txtId.setEditable(false);
        txtId.setBackground(new java.awt.Color(255, 255, 255));
        txtId.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtId.setBorder(null);

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel3.setText("Departamento:");

        jLabel4.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel4.setText("Número Movil:");

        jLabel5.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel5.setText("Extensión:");

        jLabel6.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel6.setText("Id:");

        txtNombre.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtNombre.setBorder(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtExtension, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNumMovil, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtExtension, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNumMovil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablaListaTelefono.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tablaListaTelefono.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        tablaListaTelefono.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Departamento", "Número Movil", "Extensión", "Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaListaTelefono.setSelectionBackground(new java.awt.Color(153, 204, 255));
        tablaListaTelefono.getTableHeader().setReorderingAllowed(false);
        tablaListaTelefono.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaListaTelefonoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaListaTelefono);

        btnGuardar1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnGuardar1.setForeground(new java.awt.Color(0, 0, 255));
        btnGuardar1.setMnemonic('g');
        btnGuardar1.setText("Guardar");
        btnGuardar1.setToolTipText("<html>Guardar entrada.<br/>Tambien puede usar Alt + g</html>");
        btnGuardar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGuardar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar1ActionPerformed(evt);
            }
        });

        btnBuscar1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnBuscar1.setForeground(new java.awt.Color(0, 0, 255));
        btnBuscar1.setMnemonic('b');
        btnBuscar1.setText("Buscar");
        btnBuscar1.setToolTipText("<html>______________________________________<br/><br/>Modelo de búsquedas<br/>______________________________________<br/>- Nombre<br/>- Departamento<br/>- Número de movil<br/>- Extensión<br/>Tambien puede usar Alt + b<br/></html>");
        btnBuscar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBuscar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar1ActionPerformed(evt);
            }
        });

        btnGuardarModificacion1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnGuardarModificacion1.setForeground(new java.awt.Color(0, 0, 255));
        btnGuardarModificacion1.setMnemonic('r');
        btnGuardarModificacion1.setText("Guardar Modificación");
        btnGuardarModificacion1.setToolTipText("<html>Guardar modificación.<br/>Tambien puede usar Alt + r</html>");
        btnGuardarModificacion1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGuardarModificacion1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardarModificacion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarModificacion1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1013, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(NumPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(78, 78, 78))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnGuardar1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscar1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGuardarModificacion1))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(NumPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar1)
                    .addComponent(btnBuscar1)
                    .addComponent(btnGuardarModificacion1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenuBar1.setBorder(null);
        jMenuBar1.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N

        jMenu1.setBorder(null);
        jMenu1.setForeground(new java.awt.Color(0, 0, 255));
        jMenu1.setMnemonic('m');
        jMenu1.setText("Menú");
        jMenu1.setToolTipText("<html>Menú principal<br/>listado telefónico.<br/>Tambien se puede usar Alt + m</html>");
        jMenu1.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N

        btnActualizarMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnActualizarMenu.setForeground(new java.awt.Color(0, 0, 255));
        btnActualizarMenu.setText("Actualizar");
        btnActualizarMenu.setBorder(null);
        btnActualizarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarMenuActionPerformed(evt);
            }
        });
        jMenu1.add(btnActualizarMenu);

        btnEliminar.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 0, 255));
        btnEliminar.setText("Eliminar");
        btnEliminar.setBorder(null);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jMenu1.add(btnEliminar);

        btnFicheroMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnFicheroMenu.setForeground(new java.awt.Color(0, 0, 255));
        btnFicheroMenu.setText("Crear Fichero");
        btnFicheroMenu.setBorder(null);
        btnFicheroMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFicheroMenuActionPerformed(evt);
            }
        });
        jMenu1.add(btnFicheroMenu);

        btnSalirMenu.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        btnSalirMenu.setForeground(new java.awt.Color(255, 0, 0));
        btnSalirMenu.setMnemonic('s');
        btnSalirMenu.setText("Salir");
        btnSalirMenu.setToolTipText("<html>Pulsar para salir<br/>Tambien se puede usar Alt + s<br/>y a continuación entrer</html>");
        btnSalirMenu.setBorder(null);
        btnSalirMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirMenuActionPerformed(evt);
            }
        });
        jMenu1.add(btnSalirMenu);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void NumPersonas() {
        String line;
        int i = 0;
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(fichero2));
            while ((line = br.readLine()) != null) {
                String[] numPersonas = line.split(";");
                if (numPersonas[2].equals("DENTRO")) {
                    i++;
                    String numPersonasString = String.valueOf(i);
                    NumPersonas.setText(numPersonasString);
                } else {
                    String SinPersonasString = String.valueOf(i);
                    NumPersonas.setText(SinPersonasString);
                }
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void Buscar() {
        String line;
        try {
            BufferedReader br = null;
            br = new BufferedReader(new FileReader(fichero));
            while ((line = br.readLine()) != null) {
                String[] cod_tar = line.split(";");
                if (txtNombre.getText().equalsIgnoreCase(cod_tar[0])
                        || txtDepartamento.getText().equalsIgnoreCase(cod_tar[1])
                        || txtNumMovil.getText().equalsIgnoreCase(cod_tar[2])
                        || txtExtension.getText().equalsIgnoreCase(cod_tar[3])) {
                    DefaultTableModel model = (DefaultTableModel) tablaListaTelefono.getModel();
                    TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<>(model);
                    tablaListaTelefono.setRowSorter(elQueOrdena);
                    Vector row = new Vector();
                    row.add(cod_tar[0]);
                    row.add(cod_tar[1]);
                    row.add(cod_tar[2]);
                    row.add(cod_tar[3]);
                    row.add(cod_tar[4]);
                    model.addRow(row);
                }
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void GuardarNuevoId() {
        try {
            String line;
            BufferedReader br = null;
            br = new BufferedReader(new FileReader(fichero));
            while ((line = br.readLine()) != null) {
                String[] busqueda = line.split(";");
                if (txtId.getText().equals(busqueda[4])
                        || txtNombre.getText().equals(busqueda[0])
                        || txtDepartamento.getText().equals(busqueda[1])
                        || txtNumMovil.getText().equals(busqueda[2])
                        || txtExtension.getText().equals(busqueda[3])) {
                    JOptionPane.showMessageDialog(null, "\nEste número ya existe.");
                    br.close();
                    return;
                } else if (txtNombre.getText().equals("")
                        || txtDepartamento.getText().equals("")
                        || txtNumMovil.getText().equals("")
                        || txtExtension.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "\nFaltan campos por rellenar.");
                    br.close();
                    return;
                }
            }
            br.close();
            GuardarEntradaNueva();
            LimpiarCasillas();
            MostrarTabla();
            datos();
            DefaultTableModel model = (DefaultTableModel) this.tablaListaTelefono.getModel();
            model.setRowCount(0);
            model.setRowCount(0);
            MostrarTabla();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, date.fecha() + "\nError: " + e);
        }

    }

    public void GuardarEntradaNueva() {
        BufferedReader br = null;
        String line;
        int d = 0;
        try {
            BufferedWriter bw = null;
            br = new BufferedReader(new FileReader(fichero));
            bw = new BufferedWriter(new FileWriter(fichero, true));
            if ((line = br.readLine()) != null) {
                String[] busqueda = line.split(";");
                d++;

                String Nombre = txtNombre.getText();
                busqueda[0] = Nombre;

                String Departamento = txtDepartamento.getText();
                busqueda[1] = Departamento;

                String NumMovil = txtNumMovil.getText();
                busqueda[2] = NumMovil;

                String Extension = txtExtension.getText();
                busqueda[3] = Extension;

                String id2 = txtId.getText();
                busqueda[4] = id2;

                bw.write(busqueda[0] + ';' + busqueda[1] + ';' + busqueda[2] + ';' + busqueda[3] + ';' + busqueda[4] + "\n");
            }
            bw.flush();
            br.close();
            bw.close();
            if (d == 0) {
                JOptionPane.showMessageDialog(null, "\nNO SE PUEDEN GUARDAR LOS DATOS.");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, date.fecha() + "\nError: " + e);
        }
    }

    public void GuardarModificaciones() {
        int i = 0;
        try {
            String line;
            String Nombre = txtNombre.getText();
            String Departamento = txtDepartamento.getText();
            String NumMovil = txtNumMovil.getText();
            String Extension = txtExtension.getText();
            String id = txtId.getText();
            BufferedReader br = null;
            BufferedWriter bw = null;
            br = new BufferedReader(new FileReader(fichero));
            bw = new BufferedWriter(new FileWriter(fichero_temporal));
            while ((line = br.readLine()) != null) {
                String[] busqueda = line.split(";");
                if (busqueda[4].equals(id)) {
                    i++;
                    busqueda[0] = (busqueda[0].replace(busqueda[0], Nombre));
                    busqueda[1] = (busqueda[1].replace(busqueda[1], Departamento));
                    busqueda[2] = (busqueda[2].replace(busqueda[2], NumMovil));
                    busqueda[3] = (busqueda[3].replace(busqueda[3], Extension));
                    busqueda[4] = (busqueda[4].replace(busqueda[4], id));
                }
                bw.write(busqueda[0] + ';' + busqueda[1] + ';' + busqueda[2] + ';' + busqueda[3] + ';' + busqueda[4] + "\n");
            }
            bw.flush();
            br.close();
            bw.close();
            if (i == 0) {
                JOptionPane.showMessageDialog(null, "\nNO SE ENCONTRARON DATOS RELACIONADOS A LA BÚSQUEDA  ");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, date.fecha() + "\nError: " + e);
        }
        fichero.delete();
        fichero_temporal.renameTo(fichero);
    }

    public void Seleccionar() {
        if (tablaListaTelefono.getSelectedRowCount() > 0) {
            txtNombre.setText(tablaListaTelefono.getValueAt(tablaListaTelefono.getSelectedRow(), 0).toString());
            txtDepartamento.setText(tablaListaTelefono.getValueAt(tablaListaTelefono.getSelectedRow(), 1).toString());
            txtNumMovil.setText(tablaListaTelefono.getValueAt(tablaListaTelefono.getSelectedRow(), 2).toString());
            txtExtension.setText(tablaListaTelefono.getValueAt(tablaListaTelefono.getSelectedRow(), 3).toString());
            txtId.setText(tablaListaTelefono.getValueAt(tablaListaTelefono.getSelectedRow(), 4).toString());
        }
    }

    public void datos() {
        String line2;
        int i = 0;
        BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader(fichero));
            while ((line2 = br.readLine()) != null) {
                i++;
                String id = String.valueOf(i);
                txtId.setText(id);
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void MostrarTabla() {
        String line;
        int i = 0;
        BufferedReader br = null;
        DefaultTableModel model = (DefaultTableModel) tablaListaTelefono.getModel();
        TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(model);
        model.setRowCount(0);
        model.setRowCount(0);
        try {
            br = new BufferedReader(new FileReader(fichero));
            while ((line = br.readLine()) != null) {
                String[] tabla = line.split(";");
                tablaListaTelefono.setRowSorter(elQueOrdena);
                Vector row = new Vector();
                row.add(tabla[0]);
                row.add(tabla[1]);
                row.add(tabla[2]);
                row.add(tabla[3]);
                row.add(tabla[4]);
                model.addRow(row);
            }
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void LimpiarCasillas() {
        txtNombre.setText(null);
        txtDepartamento.setText(null);
        txtNumMovil.setText(null);
        txtExtension.setText(null);
        txtId.setText(null);
    }

    public void toExcel() {
        BufferedWriter bw = null;
        DefaultTableModel model = (DefaultTableModel) tablaListaTelefono.getModel();
        try {
            bw = new BufferedWriter(new FileWriter(ficheroListaTelefono));
            for (int i = 0; i < model.getColumnCount(); i++) {
                bw.write(model.getColumnName(i) + "\t");
            }
            bw.write("\n");
            for (int i = 0; i < model.getRowCount(); i++) {
                for (int j = 0; j < model.getColumnCount(); j++) {
                    bw.write(model.getValueAt(i, j).toString() + "\t");
                }
                bw.write("\n");
            }
            bw.close();
            JOptionPane.showMessageDialog(null, "\nEl fichero se ha creado correctamente.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
    }

    public void eliminarFila() {
        String line;
        BufferedReader br = null;
        BufferedWriter bw = null;
        ArrayList<String> al = new ArrayList<>();
        try {
            br = new BufferedReader(new FileReader(fichero));
            bw = new BufferedWriter(new FileWriter(fichero_temporal));
            while ((line = br.readLine()) != null) {
                String[] tabla = line.split(";");
                al.add(tabla[0] + ';' + tabla[1] + ';' + tabla[2]
                        + ';' + tabla[3] + ';' + tabla[4] + "\n");
            }
            int i = Integer.parseInt(txtId.getText());
            int confirmado = JOptionPane.showOptionDialog(null,
                    "¿Esta seguro de eliminar los datos?",
                    "Eliminar datos",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null, new Object[]{"Si", "No"}, "No");
            switch (confirmado) {
                case JOptionPane.OK_OPTION:
                    al.remove(i);
                    JOptionPane.showMessageDialog(null, "Datos eliminados correctamente");
                    br.close();
                    break;
                case JOptionPane.NO_OPTION:
                    JOptionPane.showMessageDialog(null, "No se borrarán los datos");
                    br.close();
                    break;
                default:
                    br.close();
                    break;
            }
            for (String prueba : al) {
                bw.write(prueba);
            }
            bw.flush();
            br.close();
            bw.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
        fichero.delete();
        fichero_temporal.renameTo(fichero);
    }

    public String modificarFileEntrada() {
        BufferedReader br = null;
        BufferedWriter bw = null;
        String line;
        int i = 0;
        try {
            br = new BufferedReader(new FileReader(fichero));
            bw = new BufferedWriter(new FileWriter(fichero_temporal));
            while ((line = br.readLine()) != null) {
                String[] tabla = line.split(";");
                tabla[0] = (tabla[0].replace(tabla[0], tabla[0]));
                tabla[1] = (tabla[1].replace(tabla[1], tabla[1]));
                tabla[2] = (tabla[2].replace(tabla[2], tabla[2]));
                tabla[3] = (tabla[3].replace(tabla[3], tabla[3]));
                bw.write(tabla[0] + ';' + tabla[1] + ';' + tabla[2]
                        + ';' + tabla[3] + ';' + i + "\n");
                i++;
            }
            bw.flush();
            bw.close();
            br.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "\nError: " + e);
        }
        fichero.delete();
        fichero_temporal.renameTo(fichero);
        return " ";
    }

    private void tablaListaTelefonoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaListaTelefonoMouseClicked
        Seleccionar();
    }//GEN-LAST:event_tablaListaTelefonoMouseClicked

    private void btnGuardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar1ActionPerformed
        GuardarNuevoId();
    }//GEN-LAST:event_btnGuardar1ActionPerformed

    private void btnBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.tablaListaTelefono.getModel();
        model.setRowCount(0);
        model.setRowCount(0);
        Buscar();
        LimpiarCasillas();
        datos();
    }//GEN-LAST:event_btnBuscar1ActionPerformed

    private void btnGuardarModificacion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarModificacion1ActionPerformed
        GuardarModificaciones();
        DefaultTableModel model = (DefaultTableModel) this.tablaListaTelefono.getModel();
        model.setRowCount(0);
        model.setRowCount(0);
        MostrarTabla();
        LimpiarCasillas();
        datos();
    }//GEN-LAST:event_btnGuardarModificacion1ActionPerformed

    private void btnSalirMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirMenuActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirMenuActionPerformed

    private void btnFicheroMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFicheroMenuActionPerformed
        toExcel();
    }//GEN-LAST:event_btnFicheroMenuActionPerformed

    private void btnActualizarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarMenuActionPerformed
        DefaultTableModel model = (DefaultTableModel) this.tablaListaTelefono.getModel();
        model.setRowCount(0);
        model.setRowCount(0);
        NumPersonas();
        MostrarTabla();
        LimpiarCasillas();
        datos();
    }//GEN-LAST:event_btnActualizarMenuActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (!txtId.getText().equals("") || !txtNombre.getText().equals("")
                || !txtDepartamento.getText().equals("") || !txtNumMovil.getText().equals("")
                || !txtExtension.getText().equals("")) {
            eliminarFila();
            LimpiarCasillas();
            modificarFileEntrada();
            DefaultTableModel model = (DefaultTableModel) this.tablaListaTelefono.getModel();
            model.setRowCount(0);
            model.setRowCount(0);
            MostrarTabla();
            datos();
        } else {
            JOptionPane.showMessageDialog(null, "No hay datos seleccionados");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NumPersonas;
    private javax.swing.JMenuItem btnActualizarMenu;
    private javax.swing.JButton btnBuscar1;
    private javax.swing.JMenuItem btnEliminar;
    private javax.swing.JMenuItem btnFicheroMenu;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JButton btnGuardarModificacion1;
    private javax.swing.JMenuItem btnSalirMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaListaTelefono;
    private javax.swing.JTextField txtDepartamento;
    private javax.swing.JTextField txtExtension;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumMovil;
    // End of variables declaration//GEN-END:variables
}
